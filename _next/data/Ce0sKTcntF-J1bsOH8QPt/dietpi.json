{"pageProps":{"source":{"compiledSource":"\"use strict\";\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    a: \"a\",\n    blockquote: \"blockquote\",\n    code: \"code\",\n    div: \"div\",\n    h2: \"h2\",\n    hr: \"hr\",\n    li: \"li\",\n    ol: \"ol\",\n    p: \"p\",\n    pre: \"pre\",\n    ul: \"ul\",\n    ..._provideComponents(),\n    ...props.components\n  };\n  return _jsxs(_Fragment, {\n    children: [_jsxs(_components.p, {\n      children: [_jsx(_components.a, {\n        href: \"https://dietpi.com/\",\n        children: \"DietPi\"\n      }), \" est une distribution Linux légère pour les Raspberry Pi.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Elle est optimisée pour les performances et la consommation d'énergie.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Il s'agit d'une distribution minimaliste basée sur Debian.\"\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Installation\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Pour installer DietPi sur un Raspberry Pi, il suffit de :\"\n    }), \"\\n\", _jsxs(_components.ol, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"Télécharger l'image sur \", _jsx(_components.a, {\n          href: \"https://dietpi.com/#download\",\n          children: \"le site officiel\"\n        })]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"De la copier sur une carte micro SD avec \", _jsx(_components.a, {\n          href: \"https://balena.io/etcher/\",\n          children: \"Etcher\"\n        })]\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Puis de la mettre dans le Raspberry Pi.\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Premier démarrage\"\n    }), \"\\n\", _jsxs(_components.blockquote, {\n      className: \"callout important\",\n      children: [\"\\n                    \\n                    \", _jsxs(_components.div, {\n        className: \"callout-content\",\n        children: [\"\\n                        \", _jsx(_components.p, {\n          children: \"Pensez à bien vous connecter en root la première fois et PAS avec l'utilisateur dietpi.Personnellement, je me connecte en SSH pour le premier démarrage.Cela me permet d'être à l'aise avec mon clavier et mon ordinateur habituel et éviter les erreurs.\"\n        }), \"\\n                    \"]\n      }), \"\\n                \"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Une fois la carte SD branché et le Raspberry Pi allumé, vous pouvez vous connecter via l'interface TTY ou en SSH avec \", _jsx(_components.code, {\n        children: \"ssh root@X.X.X.X\"\n      }), \" (le mot de passe par défaut est \", _jsx(_components.code, {\n        children: \"dietpi\"\n      }), \").\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Le premier démarrage installera automatiquement les mises à jour et vous demandera de changer le mot de passe par défaut.\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"J'installe \", _jsx(_components.code, {\n        children: \"kodi\"\n      }), \" comme premier logiciel.\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Utilisation\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Pour configurer DietPi, il suffit de taper \", _jsx(_components.code, {\n        children: \"dietpi-launcher\"\n      }), \" dans le terminal.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Vous pouvez aussi utiliser d'autres commandes comme :\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"dietpi-software\"\n        }), \" pour installer des logiciels\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"dietpi-autostart\"\n        }), \" pour choisir quel logiciel lancer au démarrage\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"dietpi-config\"\n        }), \" pour configurer le système\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"dietpi-update\"\n        }), \" pour mettre à jour le système\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Pour consulter toutes les commandes disponibles, tapez \", _jsx(_components.code, {\n        children: \"dietpi\"\n      }), \" puis appuyez sur la touche \", _jsx(_components.code, {\n        children: \"TAB\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Activer le bluetooth\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Pour activer le bluetooth :\"\n    }), \"\\n\", _jsxs(_components.ol, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"\\n\", \"Exécutez la commande \", _jsx(_components.code, {\n          children: \"dietpi-config\"\n        }), \" puis selectionnez\", _jsx(_components.code, {\n          children: \"Advanced Options\"\n        }), \" -> \", _jsx(_components.code, {\n          children: \"Bluetooth\"\n        }), \".\", \"\\n\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"\\n\", \"Installez ce package :\", \"\\n\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-bash\",\n        children: \"apt install -y bluez-alsa-utils\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.ol, {\n      start: \"3\",\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Créer la configuration suivante :\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-bash\",\n        children: \"sudo cp /etc/asound.conf /etc/asound.conf.bak\\necho -e 'pcm.!default bluealsa\\\\nctl.!default bluealsa' | sudo tee /etc/asound.conf\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Pour me connecter en bluetooth :\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"J'exécute la commande \", _jsx(_components.code, {\n          children: \"bluetoothctl\"\n        }), \" en SSH\"]\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.code, {\n          children: \"scan on\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.code, {\n          children: \"pair <MAC>\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.code, {\n          children: \"trust <MAC>\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.code, {\n          children: \"connect <MAC>\"\n        })\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Pour tester si le son fonctionne j'exécute la commande suivante :\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-bash\",\n        children: \"aplay /usr/share/sounds/alsa/Front_Center.wav\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Si vous utilisez Kodi, désactiver l'autostart de kodi et gardez un autostart manual pour pouvoir vous connecter au bluetooth de votre Raspberry AVANT le démarrage de Kodi.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Ou connecté votre périphérique audio (si il est allumé) avant le démarrage de kodi via la commande suivante ;\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-bash\",\n        children: \"echo 'bluetoothctl connect <MAC>' > /var/lib/dietpi/postboot.d/bt-speakers.sh\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Exemple d'utilisation avec Kodi\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Dans mon cas, j'ai installé Kodi pour utiliser le Raspberry Pi comme media center :\"\n    }), \"\\n\", _jsxs(_components.ol, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"J'installe \", _jsx(_components.code, {\n          children: \"kodi\"\n        }), \" avec \", _jsx(_components.code, {\n          children: \"dietpi-software\"\n        })]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"Je le configure pour qu'il se lance au démarrage avec \", _jsx(_components.code, {\n          children: \"dietpi-autostart\"\n        })]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"Je \", _jsx(_components.code, {\n          children: \"reboot\"\n        }), \" le Raspberry Pi\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Jusqu'à présent, j'utilisais \", _jsx(_components.a, {\n        href: \"/libreelec\",\n        title: \"LibreELEC\",\n        children: \"LibreELEC\"\n      }), \", mais je trouve DietPi beaucoup plus flexible et moins restrictif.\"]\n    }), \"\\n\\n\", _jsxs(_components.p, {\n      children: [\"On peut installer \", _jsx(_components.a, {\n        href: \"https://dietpi.com/dietpi-software.html\",\n        children: \"plein d'autres logiciels\"\n      }), \" tout en gardant de très bonnes performances.\"]\n    }), \"\\n\", _jsx(_components.hr, {}), \"\\n\", _jsx(_components.p, {\n      children: \"Références :\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"https://korben.info/dietpi-debian-ultra-legere-optimisee-raspberry-pi-odroid-pine64.html\",\n          children: \"https://korben.info/dietpi-debian-ultra-legere-optimisee-raspberry-pi-odroid-pine64.html\"\n        })\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"\\n\", _jsx(_components.a, {\n          href: \"/raspberry-pi\",\n          title: \"Raspberry PI\",\n          className: \"not-found\",\n          children: \"Raspberry PI\"\n        }), \"\\n\\n\"]\n      }), \"\\n\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{"title":"DietPI","permalink":"dietpi","description":"DietPi est une distribution Linux légère pour les Raspberry Pi.","datePublished":"2024-02-12T10:00:00","dateUpdated":"2024-02-12T10:00:00","publish":true,"rss":true},"scope":{}},"isIndex":false,"file":"DietPI.md","fileName":"DietPI","comments":true,"title":"DietPI","permalink":"dietpi","description":"DietPi est une distribution Linux légère pour les Raspberry Pi.","datePublished":"2024-02-12T10:00:00","dateUpdated":"2024-02-12T10:00:00","publish":true,"rss":true},"__N_SSG":true}