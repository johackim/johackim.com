{"pageProps":{"source":{"compiledSource":"\"use strict\";\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    a: \"a\",\n    code: \"code\",\n    hr: \"hr\",\n    li: \"li\",\n    p: \"p\",\n    pre: \"pre\",\n    ul: \"ul\",\n    ..._provideComponents(),\n    ...props.components\n  };\n  return _jsxs(_Fragment, {\n    children: [_jsxs(_components.p, {\n      children: [\"Pour générer des images de manière dynamique en Node.js, il existe la librairie \", _jsx(_components.code, {\n        children: \"node-canvas\"\n      }), \" :\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-bash\",\n        children: \"yarn add -D canvas canvas-txt\\n\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-js\",\n        children: \"// script.js\\nconst fs = require('fs');\\nconst { createCanvas } = require('canvas');\\nconst { default: canvasTxt } = require('canvas-txt');\\n\\nconst createImage = (text, path = 'image.jpg', width = 1600, height = 900) => {\\n    const canvas = createCanvas(width, height);\\n    const ctx = canvas.getContext('2d');\\n\\n    ctx.fillStyle = '#101827';\\n    ctx.fillRect(0, 0, width, height);\\n\\n    canvasTxt.fontSize = 72;\\n    canvasTxt.fontWeight = 500;\\n    canvasTxt.font = 'Roboto';\\n    canvasTxt.align = 'center';\\n    canvasTxt.vAlign = 'middle';\\n    ctx.fillStyle = '#E5E7EB';\\n    canvasTxt.drawText(ctx, text, 0, canvas.height / 4, canvas.width - 10, canvas.height / 2);\\n\\n    const buffer = canvas.toBuffer('image/jpeg');\\n    fs.writeFileSync(path, buffer);\\n};\\n\\ncreateImage('Hello World!');\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Lorsque j'exécute ce script (\", _jsx(_components.code, {\n        children: \"node script.js\"\n      }), \"), une image avec un fond gris et un texte blanc \\\"Hello World!\\\" sera créée.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"C'est cette librairie que j'utilise pour générer automatiquement toutes les previews de mon \", _jsx(_components.a, {\n        href: \"https://johackim.com\",\n        children: \"Digital Garden\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.hr, {}), \"\\n\", _jsx(_components.p, {\n      children: \"Références :\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"\\n\", _jsx(_components.a, {\n          href: \"/programmation\",\n          title: \"Programmation\",\n          children: \"Programmation\"\n        }), \"\\n\\n\"]\n      }), \"\\n\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{"title":"Générer dynamiquement des images avec node-canvas","permalink":"generer-dynamiquement-des-images-avec-node-canvas","datePublished":"2021-07-05T16:31","dateUpdated":"2021-07-05T16:31","publish":true,"rss":true},"scope":{}},"isIndex":false,"file":"node-canvas.md","fileName":"node-canvas","comments":true,"title":"Générer dynamiquement des images avec node-canvas","permalink":"generer-dynamiquement-des-images-avec-node-canvas","datePublished":"2021-07-05T16:31","dateUpdated":"2021-07-05T16:31","publish":true,"rss":true},"__N_SSG":true}