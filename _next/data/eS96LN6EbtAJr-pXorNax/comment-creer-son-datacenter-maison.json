{"pageProps":{"source":{"compiledSource":"\"use strict\";\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    a: \"a\",\n    code: \"code\",\n    h2: \"h2\",\n    hr: \"hr\",\n    img: \"img\",\n    li: \"li\",\n    p: \"p\",\n    pre: \"pre\",\n    strong: \"strong\",\n    ul: \"ul\",\n    ..._provideComponents(),\n    ...props.components\n  };\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.p, {\n      children: \"Après plusieurs semaines de recherches et de tests, je souhaite partager avec vous ce guide d'installation d'un homelab conçu uniquement avec des logiciels open-source afin de vous permettre d'héberger vos sites internet à la maison !\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"PS: J'envisage par la suite de créer une solution \", _jsx(_components.strong, {\n        children: \"homelab\"\n      }), \" \", _jsx(_components.strong, {\n        children: \"all-in-one\"\n      }), \" et \", _jsx(_components.strong, {\n        children: \"plug'n play\"\n      }), \" afin de permettre aux néophytes d'installer eux-mêmes leur datacenter chez eux sans connaissances particulières. Si vous êtes intéressé par ce projet, n'hésitez pas à renseigner votre adresse mail \", _jsx(_components.a, {\n        href: \"/newsletter\",\n        children: \"sur ce lien\"\n      }), \" afin d'être informé de sa sortie.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Pour le moment voilà à quoi ressemble mon infrastructure maison :\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.img, {\n        src: \"https://i.imgur.com/HPFrm3m.png\",\n        alt: \"Infrastructure\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.strong, {\n        children: \"NOTE\"\n      }), \" : Je suis chez orange (Sosh plus précisément) et ma livebox ne gère pas le \", _jsx(_components.strong, {\n        children: \"bridge\"\n      }), \", je ne peux donc pas utilisé \", _jsx(_components.strong, {\n        children: \"pfsense\"\n      }), \" en tant que routeur, firewall et serveur DHCP. Et je n'ai pas non plus la possibilité d'obtenir une \", _jsx(_components.strong, {\n        children: \"IP publique fixe\"\n      }), \". Je referai un article sur \", _jsx(_components.strong, {\n        children: \"pfsense\"\n      }), \" lorsque j'aurai changé de FAI...\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Prérequis\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"Un PC avec une connexion internet fera l'affaire. (il existe aussi \", _jsx(_components.a, {\n          href: \"https://intel.com/content/us/en/products/boards-kits/nuc.html\",\n          children: \"les mini PC NUC de Intel\"\n        }), \" qui ont l'air pas mal).\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Pour ma part j'ai utilisé mon vieux \", _jsx(_components.a, {\n        href: \"https://framapic.org/QaBdvkTz4snV/OIbeUeFPEL2I.jpg\",\n        children: \"Sony VAIO VPCF21Z1E\"\n      }), \" en tant que \", _jsx(_components.strong, {\n        children: \"Serveur Bare-Metal\"\n      }), \" sur lequel j'ai installé \", _jsx(_components.strong, {\n        children: \"proxmox\"\n      }), \" comme \", _jsx(_components.strong, {\n        children: \"hyperviseur\"\n      }), \". J'y ai démarré une VM (machine virtuelle) avec le reverse proxy \", _jsx(_components.strong, {\n        children: \"traefik\"\n      }), \" pour pouvoir router le trafic entrant sur les VMs correspondantes. Je peux désormais démarrer autant de VMs que je veux dans la limite des capacités de mon ordinateur. Dans le cas où les limites sont proches d'être dépassé, proxmox permet de faire du clustering et donne la possibilité de lier d'autres équipements.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Voici selon moi les avantages et désavantages de l'utilisation d'un homelab par rapport à une solution cloud:\"\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Les avantages\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Protection de la vie privée\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Économies d'argent\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Garder le contrôle de ses données\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Pas de restriction ni de dépendance avec un service tiers\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Impact écologique moindre\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Décentraliser internet\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Les désavantages\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Le bon fonctionnement de votre homelab dépendra de la qualité du réseau / débit de votre connexion internet.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Votre PC doit rester allumé 24h/24\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Pas de support, vous êtes seul en tant qu'administrateur système (if you break it, you fix it)\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Vous disposez généralement d'une seule adresse IP publique qui n'est pas toujours statique.\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Si comme moi vous êtes curieux, bidouilleur, sensible au sujet de la vie privée et que vous souhaitez vous passer des fournisseurs cloud traditionnels comme AWS, OVH, Digital Ocean, Scaleway, Google Cloud Platform et j'en passe alors vous êtes au bon endroit !\"\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Installation de Proxmox\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Dans un premier temps, vous devez télécharger et copier le fichier .iso depuis le \", _jsx(_components.a, {\n        href: \"https://proxmox.com/en/downloads/category/iso-images-pve\",\n        children: \"site officiel\"\n      }), \" sur une clé USB. De mon côté, j'utilise \", _jsx(_components.a, {\n        href: \"https://etcher.io/\",\n        children: \"etcher\"\n      }), \" pour créer une clé USB bootable.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Une fois bootée sur votre ordinateur qui fera office de serveur, l'installation commence :\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Selectionnez le disque dur de destination (\", _jsx(_components.code, {\n        children: \"/dev/sda\"\n      }), \" dans mon cas).\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Selectionnez votre timezone et la langue de votre clavier.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Configurer les paramètres réseau\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.img, {\n        src: \"https://i.imgur.com/0BtefaD.png\",\n        alt: \"proxmox configuration réseau\"\n      })\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Reboot\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"L'installation est déjà terminée. Vous pouvez accéder à la très jolie UI de proxmox via \", _jsx(_components.a, {\n        href: \"https://192.168.1.50:8006\",\n        children: \"https://192.168.1.50:8006\"\n      }), \" avec l'identifiant \", _jsx(_components.strong, {\n        children: \"root\"\n      }), \" et \", _jsx(_components.strong, {\n        children: \"votre mot de passe\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Vous pouvez déjà créer des VPS (serveurs privés virtuels) à la demande gratuitement et chez vous !\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.strong, {\n        children: \"Bonus\"\n      }), \": proxmox fournit un \", _jsx(_components.strong, {\n        children: \"catalogue de template\"\n      }), \" avec tout plein de distributions et services à démarrer en quelques clics (gitlab, etherpad, jenkins, piwik, debian, ubuntu, arch, centos etc...). La partie \", _jsx(_components.strong, {\n        children: \"Backup\"\n      }), \" vous permet de planifier la sauvegarde de vos VMs sous forme de snapshots.\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Reverse proxy (traefik) et let's encrypt\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Je dispose d'une seule adresse IP publique et les services web que je compte déployer sont répartis sur plusieurs machines virtuelles. \", _jsx(_components.strong, {\n        children: \"traefik\"\n      }), \" va router le trafic web entrant sur les différentes VMs.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"On créer une VM \", _jsx(_components.strong, {\n        children: \"traefik\"\n      }), \" basé sur \", _jsx(_components.strong, {\n        children: \"debian\"\n      }), \" puis on autorise l'accès aux ports \", _jsx(_components.strong, {\n        children: \"80\"\n      }), \" et \", _jsx(_components.strong, {\n        children: \"443\"\n      }), \" en ajoutant deux règles de \", _jsx(_components.strong, {\n        children: \"port forwarding\"\n      }), \" sur notre box internet en direction de notre nouvelle VM.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"L'installation de \", _jsx(_components.strong, {\n        children: \"traefik\"\n      }), \" est très simple, un simple fichier binaire en go à \", _jsx(_components.a, {\n        href: \"https://github.com/containous/traefik/releases\",\n        children: \"télécharger\"\n      }), \" et exécuter.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-bash\",\n        children: \"wget -O /usr/local/bin/traefik https://github.com/containous/traefik/releases/download/v1.4.0-rc4/traefik_linux-amd64\\nchmod + /usr/local/bin/traefik\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Voilà à quoi ressemble ma configuration pour accéder au blog sur lequel vous vous trouvez actuellement :\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-toml\",\n        children: \"# traefik.toml\\n\\ndefaultEntryPoints = [\\\"http\\\", \\\"https\\\"]\\n\\n[entryPoints]\\n\\n  [entryPoints.http]\\n  address = \\\":80\\\"\\n    [entryPoints.http.redirect]\\n    entryPoint = \\\"https\\\"\\n  [entryPoints.https]\\n  address = \\\":443\\\"\\n    [entryPoints.https.tls]\\n\\n[acme]\\n\\nemail = \\\"contact@johackim.com\\\"\\nstorage = \\\"acme.json\\\"\\nentryPoint = \\\"https\\\"\\nonDemand = true\\n\\n[[acme.domains]]\\n  main = \\\"johackim.com\\\"\\n\\n[file]\\n\\n[backends]\\n  [backends.blog]\\n    [backends.blog.servers.server]\\n    url = \\\"http://192.168.1.5:80\\\"\\n\\n[frontends]\\n  [frontends.blog]\\n  passHostHeader = true\\n  entrypoints = [\\\"http\\\", \\\"https\\\"]\\n  backend = \\\"blog\\\"\\n    [frontends.blog.routes.route]\\n    rule = \\\"Host:johackim.com\\\"\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Une simple commande permet de démarrer traefik : \", _jsx(_components.code, {\n        children: \"traefik -c traefik.toml\"\n      })]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"L'avantage de cette configuration c'est qu'elle permet d'automatiser la génération de certificats \", _jsx(_components.strong, {\n        children: \"let's encrypt\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Configuration de DYNDNS\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Dans le cas où votre FAI ne vous donne pas la possibilité de disposer d'une IP statique il existe plusieurs méthodes, j'en connais actuellement deux, la première fonctionne avec \", _jsx(_components.strong, {\n        children: \"ddclient\"\n      }), \":\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-bash\",\n        children: \"DEBIAN_FRONTEND=noninteractive apt-get install -y ddclient\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Voici un exemple de configuration \", _jsx(_components.strong, {\n        children: \"ddclient\"\n      }), \" relié à \", _jsx(_components.strong, {\n        children: \"OVH\"\n      }), \" :\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-conf\",\n        children: \"# /etc/ddclient.conf\\n\\nprotocol=dyndns2\\nuse=web, web=checkip.dyndns.com\\nserver=ovh.com\\nlogin=YOUR_LOGIN\\npassword=YOUR_PASSWORD\\njohackim.com\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"La seconde méthode fonctionne avec un simple script shell \", _jsx(_components.strong, {\n        children: \"dyndns.sh:\"\n      })]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-bash\",\n        children: \"#!/bin/bash\\n\\nDYNHOST_USER=\\\"MY_LOGIN\\\"\\nDYNHOST_PASSWD=\\\"MY_PASSWORD\\\"\\nDYNHOST_DOMAINS=(mydomain.com mydomain2.com)\\nOVH_URL=\\\"https://ovh.com/nic/update?system=dyndns\\\"\\n\\nfor DYNHOST_DOMAIN in ${DYNHOST_DOMAINS[@]}; do\\n    curl --user \\\"$DYNHOST_USER:$DYNHOST_PASSWD\\\" \\\"${OVH_URL}&hostname=${DYNHOST_DOMAIN}\\\"\\ndone\\n\\nexit $?\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Sans oublié de configurer une tâche cron:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-cron\",\n        children: \"*/10 * * * * bash /usr/local/bin/dyndns.sh\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Dans les deux cas il faudra vous créer un identifiant dans la partie \", _jsx(_components.strong, {\n        children: \"DynHOST\"\n      }), \" de votre nom de domaine chez OVH.\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Contourner le loopback de la Livebox\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Pour ceux qui disposent une livebox et qui aimeraient accéder à leurs services depuis leur réseau local sans être redirigé sur la page d'accueil de la livebox je les invite à se rendre sur \", _jsx(_components.a, {\n        href: \"https://blog.cagedmonster.net/contourner-le-loopback-de-la-livebox/\",\n        children: \"cet article\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Conclusion\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Bon, ce n’est pas encore un AWS maison, mais pour ceux qui rêvent de pouvoir lancer des VPS simplement et automatiser leurs sauvegardes avec uniquement des logiciels open-source c'est déjà un très bon début.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"J'ai migré toute mon infrastructure OVH chez moi et je dois avouer que c'est très plaisant ! Je peux augmenté la RAM, CPU et la taille des disques de mes VMs très facilement grâce à proxmox et à moindre cout.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"J'utilise cette infrastructure maison pour démarrer tous mes services, à savoir Taiga, Jenkins, Rocket.Chat, Metabase, Sentry, Gogs, Zabbix, Searx, Wallabag, Piwik et le blog que vous lisez actuellement\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Pour l'aspect sécurité, à vous d'installer et paramétrer vos firewalls, IPS, hardening ect...\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Voilà ! Si vous avez des questions, suggestions ou améliorations à apporter pour faciliter le processus d'installation ou autre, n'hésitez pas à les soumettre dans les commentaires !\"\n    }), \"\\n\", _jsx(_components.hr, {}), \"\\n\", _jsx(_components.p, {\n      children: \"Références :\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"https://blog.zwindler.fr/2017/07/11/deploiment-de-proxmox-ve-5-sur-un-serveur-dedie-part-1/\",\n          children: \"Déploiement de proxmox ve 5 sur un serveur dédié\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"https://reddit.com/r/homelab/\",\n          children: \"https://reddit.com/r/homelab/\"\n        })\n      }), \"\\n\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{"title":"Comment créer son datacenter maison (homelab) ?","permalink":"comment-creer-son-datacenter-maison","datePublished":"2017-10-27T08:24","dateUpdated":"2017-10-27T08:24","description":"Voici un guide d'installation d'un homelab conçu uniquement avec des logiciels open-source afin de vous permettre d'héberger vos sites internet à la maison !","publish":true,"rss":true,"aliases":["Proxmox"]},"scope":{}},"isIndex":false,"file":"Homelab.md","fileName":"Homelab","comments":true,"title":"Comment créer son datacenter maison (homelab) ?","permalink":"comment-creer-son-datacenter-maison","datePublished":"2017-10-27T08:24","dateUpdated":"2017-10-27T08:24","description":"Voici un guide d'installation d'un homelab conçu uniquement avec des logiciels open-source afin de vous permettre d'héberger vos sites internet à la maison !","publish":true,"rss":true,"aliases":["Proxmox"]},"__N_SSG":true}