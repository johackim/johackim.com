{"pageProps":{"source":{"compiledSource":"\"use strict\";\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    a: \"a\",\n    code: \"code\",\n    p: \"p\",\n    pre: \"pre\",\n    ..._provideComponents(),\n    ...props.components\n  };\n  return _jsxs(_Fragment, {\n    children: [_jsxs(_components.p, {\n      children: [\"Pour installer Traefik avec \", _jsx(_components.a, {\n        href: \"/docker-swarm\",\n        title: \"Docker Swarm\",\n        children: \"Docker Swarm\"\n      }), \", on créer une stack Docker \", _jsx(_components.code, {\n        children: \"traefik.yml\"\n      }), \" :\"]\n    }), \"\\n\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-yaml\",\n        children: \"# traefik.yml\\nversion: '3.8'\\n\\nservices:\\n  traefik:\\n    image: traefik:${VERSION:-2.4.8}\\n    command:\\n      - --providers.docker\\n      - --providers.docker.network=traefik-net\\n      - --providers.docker.exposedByDefault=false\\n      - --providers.docker.swarmMode=true\\n      - --providers.docker.endpoint=unix:///var/run/docker.sock\\n      - --entrypoints.http.address=:80\\n    volumes:\\n      - /var/run/docker.sock:/var/run/docker.sock:ro\\n    ports:\\n      - {target: 80, published: 80, mode: host, protocol: tcp}\\n\\nnetworks:\\n  default:\\n    external: true\\n    name: traefik-net\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"On créer un réseau docker :\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-bash\",\n        children: \"docker network create --driver=overlay traefik-net\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"On déploie traefik :\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-bash\",\n        children: \"docker stack deploy -c traefik.yml traefik\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Il est à présent possible de déployer une application (ex: Ghost) avec un nom de domaine associé (ex: ghost.localhost) :\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-bash\",\n        children: \"docker service create --network traefik-net \\\\\\n-l traefik.enable=true \\\\\\n-l traefik.http.routers.my-container.rule='Host(`ghost.localhost`)' \\\\\\n-l traefik.http.services.my-service.loadbalancer.server.port=2368 ghost\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Vous pouvez accédez à votre application en vous rendant sur \", _jsx(_components.a, {\n        href: \"http://ghost.localhost\",\n        children: \"http://ghost.localhost\"\n      }), \".\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{"datePublished":"2021-05-17T17:32","dateUpdated":"2021-05-17T17:32","permalink":"installer-traefik-avec-docker-swarm","publish":true,"rss":true},"scope":{}},"isIndex":false,"file":"Installer Traefik avec Docker Swarm.md","fileName":"Installer Traefik avec Docker Swarm","comments":true,"title":"Installer Traefik avec Docker Swarm","permalink":"installer-traefik-avec-docker-swarm","datePublished":"2021-05-17T17:32","dateUpdated":"2021-05-17T17:32","publish":true,"rss":true},"__N_SSG":true}