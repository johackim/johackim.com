{"pageProps":{"source":{"compiledSource":"\"use strict\";\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    a: \"a\",\n    code: \"code\",\n    p: \"p\",\n    pre: \"pre\",\n    ..._provideComponents(),\n    ...props.components\n  };\n  return _jsxs(_Fragment, {\n    children: [_jsxs(_components.p, {\n      children: [\"Après avoir \", _jsx(_components.a, {\n        href: \"/initialiser-un-projet-gatsby\",\n        title: \"Initialiser un projet Gatsby\",\n        children: \"Initialiser un projet Gatsby\"\n      }), \" et \", _jsx(_components.a, {\n        href: \"/importer-ses-notes-markdown-dans-gatsby\",\n        title: \"importer vos fichiers markdown\",\n        children: \"importer vos fichiers markdown\"\n      }), \", vous pouvez créer automatiquement la table des matière d'un fichier markdown dans Gatsby.\"]\n    }), \"\\n\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-javascript\",\n        children: \"// gatsby-node.js\\nexports.createPages = async ({ actions, graphql, reporter }) => {\\n    const { createPage } = actions;\\n\\n    const result = await graphql(`\\n        {\\n            allMarkdownRemark {\\n                edges {\\n                    node {\\n                        id\\n                        html\\n                        headings {\\n                            value\\n                            depth\\n                        }\\n                        parent {\\n                            ... on File {\\n                                name\\n                            }\\n                        }\\n                    }\\n                }\\n            }\\n        }\\n    `);\\n\\n    if (result.errors) {\\n        reporter.panicOnBuild('Error while running GraphQL query.');\\n        return;\\n    }\\n\\n    const markdowns = result.data.allMarkdownRemark.edges;\\n\\n    const noteTemplate = require.resolve('./src/templates/noteTemplate.js');\\n\\n    markdowns.forEach(({ node }) => {\\n        const { id, html, headings } = node;\\n\\n        createPage({\\n            path: `/${node.parent.name}`,\\n            component: noteTemplate,\\n            context: { id, html, headings },\\n        });\\n    });\\n};\\n\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-javascript\",\n        children: \"// src/components/toc.js\\nimport React from 'react';\\nimport { Link } from 'gatsby';\\nimport slugify from 'slugify';\\n\\nexport default ({ headings = [], depthMin = 1, className = '' }) => {\\n    if (!headings.length) return false;\\n\\n    return (\\n        <ul className={className}>\\n            {headings.filter(({ depth }) => depth >= depthMin).map(({ value }) => {\\n                const id = slugify(value, { lower: true, strict: true });\\n\\n                return (\\n                    <li key={value}>\\n                        <Link to={`#${id}`} title={value}>\\n                            {value}\\n                        </Link>\\n                    </li>\\n                );\\n            })}\\n        </ul>\\n    );\\n};\\n\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-js\",\n        children: \"// src/templates/noteTemplate.js\\nimport React from 'react';\\nimport Toc from '../components/toc';\\n\\nexport default function Template({ pageContext }) {\\n    const { html, headings } = pageContext;\\n\\n    return (\\n        <>\\n            <Toc headings={headings} depthMin={2} />\\n            <div dangerouslySetInnerHTML={{ __html: html }} />\\n        </>\\n    );\\n}\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Pour créer automatiquement les id sur chaque header, il existe le plugin \", _jsx(_components.a, {\n        href: \"https://gatsbyjs.com/plugins/gatsby-remark-autolink-headers/\",\n        children: \"gatsby-remark-autolink-headers\"\n      }), \" :\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-npm\",\n        children: \"yarn add -D gatsby-remark-autolink-headers\\n\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-javascript\",\n        children: \"// gatsby-config.js\\nmodule.exports = {\\n    plugins: [\\n        {\\n            resolve: 'gatsby-source-filesystem',\\n            options: {\\n                path: './content',\\n            },\\n        },\\n        {\\n            resolve: 'gatsby-transformer-remark',\\n            options: {\\n                plugins: [\\n                    {\\n                        resolve: 'gatsby-remark-autolink-headers',\\n                        options: {\\n                            icon: false,\\n                        },\\n                    },\\n                ],\\n            },\\n        },\\n    ],\\n};\\n\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{"datePublished":"2021-05-31T16:00","dateUpdated":"2021-05-31T16:00","permalink":"creer-une-table-des-matieres-des-fichiers-markdown-avec-gatsby","title":"Créer une table des matières des fichiers markdown avec Gatsby","publish":true,"rss":true},"scope":{}},"isIndex":false,"file":"Créer une table des matières sur Gatsby.md","fileName":"Créer une table des matières sur Gatsby","comments":true,"title":"Créer une table des matières des fichiers markdown avec Gatsby","permalink":"creer-une-table-des-matieres-des-fichiers-markdown-avec-gatsby","datePublished":"2021-05-31T16:00","dateUpdated":"2021-05-31T16:00","publish":true,"rss":true},"__N_SSG":true}