{"pageProps":{"source":{"compiledSource":"\"use strict\";\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    a: \"a\",\n    code: \"code\",\n    h2: \"h2\",\n    hr: \"hr\",\n    li: \"li\",\n    p: \"p\",\n    pre: \"pre\",\n    ul: \"ul\",\n    ..._provideComponents(),\n    ...props.components\n  };\n  return _jsxs(_Fragment, {\n    children: [_jsxs(_components.p, {\n      children: [_jsx(_components.a, {\n        href: \"https://electronjs.org/\",\n        children: \"Electron\"\n      }), \" est un framework qui permet de créer des applications de bureau multi-plateformes.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Il est basé sur Node.js et le moteur de rendu Chromium.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"C'est un projet open-source créé par GitHub et est maintenu par une communauté très active.\"\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Installation\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Pour installer Electron, il suffit de lancer la commande suivante dans un nouveau dossier :\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-bash\",\n        children: \"yarn add -D electron\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"PS : N'oubliez pas de créer un fichier package.json avec la commande \", _jsx(_components.code, {\n        children: \"npm init -f\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Utilisation\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Pour créer un projet Electron, il suffit de créer un fichier \", _jsx(_components.code, {\n        children: \"index.js\"\n      }), \" et d'y ajouter le code suivant :\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-js\",\n        children: \"const { app, BrowserWindow } = require('electron');\\n\\nconst createWindow = () => {\\n    const win = new BrowserWindow();\\n\\n    win.loadURL(`data:text/html;charset=UTF-8,\\n    <html>\\n        <body>\\n          <h1>Hello World!</h1>\\n        </body>\\n    </html>`);\\n};\\n\\napp.whenReady().then(createWindow);\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Il s'agit d'un exemple très simple qui affiche une fenêtre avec le texte \\\"Hello World!\\\".\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Pour lancer l'application Electron, il suffit d'exécuter la commande suivante :\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-bash\",\n        children: \"npx electron index.js\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Et pour compiler votre application :\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-bash\",\n        children: \"npx electron-builder build\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Pour aller plus loin, je vous invite à consulter la \", _jsx(_components.a, {\n        href: \"https://electronjs.org/docs\",\n        children: \"documentation officielle\"\n      }), \".\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Electron est un framework très populaire et est utilisé par de nombreuses applications comme Signal, Obsidian, Visual Studio Code, Discord et \", _jsx(_components.a, {\n        href: \"https://electronjs.org/apps\",\n        children: \"plein d'autres\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.hr, {}), \"\\n\", _jsx(_components.p, {\n      children: \"Références :\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"https://github.com/electron/electron\",\n          children: \"https://github.com/electron/electron\"\n        })\n      }), \"\\n\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{"title":"Electron","permalink":"electron","description":"Electron est un framework qui permet de créer des applications de bureau multi-plateformes.","datePublished":"2024-03-18T10:00:00","dateUpdated":"2024-03-18T10:00:00","publish":true,"rss":true},"scope":{}},"isIndex":false,"file":"Electron.md","fileName":"Electron","comments":true,"title":"Electron","permalink":"electron","description":"Electron est un framework qui permet de créer des applications de bureau multi-plateformes.","datePublished":"2024-03-18T10:00:00","dateUpdated":"2024-03-18T10:00:00","publish":true,"rss":true},"__N_SSG":true}