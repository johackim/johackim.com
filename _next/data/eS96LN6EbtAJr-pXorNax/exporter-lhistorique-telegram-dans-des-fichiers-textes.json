{"pageProps":{"source":{"compiledSource":"\"use strict\";\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    a: \"a\",\n    code: \"code\",\n    h2: \"h2\",\n    hr: \"hr\",\n    li: \"li\",\n    p: \"p\",\n    pre: \"pre\",\n    ul: \"ul\",\n    ..._provideComponents(),\n    ...props.components\n  };\n  return _jsxs(_Fragment, {\n    children: [_jsxs(_components.p, {\n      children: [\"Ayant pour habitude de stocker toutes mes \", _jsx(_components.a, {\n        href: \"/notes-temporaires\",\n        title: \"notes temporaires\",\n        children: \"notes temporaires\"\n      }), \" dans l'application mobile \", _jsx(_components.a, {\n        href: \"https://telegram.org/\",\n        children: \"Telegram\"\n      }), \", j'ai automatisé l'extraction de mes notes dans mon \", _jsx(_components.a, {\n        href: \"/obsidian\",\n        title: \"Obsidian\",\n        children: \"Obsidian\"\n      }), \".\"]\n    }), \"\\n\\n\", _jsx(_components.h2, {\n      children: \"Solution 1 : Exporter les notes dans un seul fichier\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"La première solution est d'exécuter se script bash après avoir exporter mes messages sauvegardés au format \", _jsx(_components.code, {\n        children: \"json\"\n      }), \" via le menu \", _jsx(_components.code, {\n        children: \"Export chat history\"\n      }), \" de Telegram.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-bash\",\n        children: \"#!/bin/bash\\n\\nif [[ ! -f \\\"$1\\\" ]]; then\\n    echo \\\"usage: telegram-to-text.sh [result.json]\\\"\\n    exit 1\\nfi\\n\\njq -r '\\n    .messages[] |\\n    select(.text != \\\"\\\") |\\n    {date, text: (if .text|type == \\\"array\\\" then (.text[] | select(. != \\\"\\\") | if .|type == \\\"object\\\" then .text else . end) else .text end)} |\\n    \\\"\\\\(.date)\\\\n\\\\(.text)\\\\n\\\"' < \\\"$1\\\"\\n\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-bash\",\n        children: \"telegram-to-text.sh result.json >> Inbox.md\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Solution 2 : Exporter les notes dans plusieurs fichiers\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"La seconde solution consiste à exporter chaque note dans un dossier \", _jsx(_components.code, {\n        children: \"Journal\"\n      }), \" qui contient toutes mes notes par date (ex: \", _jsx(_components.code, {\n        children: \"2022-03-01.md\"\n      }), \" ou \", _jsx(_components.code, {\n        children: \"2022-03-01.txt\"\n      }), \").\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-bash\",\n        children: \"#!/bin/bash\\n\\nif [[ ! -f \\\"$1\\\" || ! -d \\\"$2\\\" ]]; then\\n    echo \\\"usage: telegram-to-text.sh [result.json] [destination folder]\\\"\\n    exit 1\\nfi\\n\\nMESSAGES=$(jq -r '.messages[] |\\n    select(.text != \\\"\\\") |\\n    {\\n        date: .date[0:10],\\n        text: (if .text|type == \\\"array\\\" then (.text[] | select(. != \\\"\\\") | if .|type == \\\"object\\\" then .text else . end) else .text end),\\n    } | @base64' < \\\"$1\\\")\\n\\nfor MESSAGE in $MESSAGES; do\\n     DATE=$(echo \\\"$MESSAGE\\\" | base64 --decode | jq -r '.date' )\\n     TEXT=$(echo \\\"$MESSAGE\\\" | base64 --decode | jq -r '.text' )\\n\\n     echo \\\"$TEXT\\\" >> \\\"${2}/${DATE}.md\\\"\\ndone\\n\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-bash\",\n        children: \"telegram-to-text.sh result.json Journal\\n\"\n      })\n    }), \"\\n\", _jsx(_components.hr, {}), \"\\n\", _jsx(_components.p, {\n      children: \"Références :\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"https://gist.github.com/johackim/88f6ea71811a004e72dc37e9494bb618\",\n          children: \"https://gist.github.com/johackim/88f6ea71811a004e72dc37e9494bb618\"\n        })\n      }), \"\\n\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{"datePublished":"2022-03-20T23:17","dateUpdated":"2022-03-20T23:17","title":"Exporter l'historique de ses notes Telegram dans des fichiers textes","permalink":"exporter-lhistorique-telegram-dans-des-fichiers-textes","publish":true,"rss":true},"scope":{}},"isIndex":false,"file":"Exporter l'historique Telegram dans des fichiers textes.md","fileName":"Exporter l'historique Telegram dans des fichiers textes","comments":true,"title":"Exporter l'historique de ses notes Telegram dans des fichiers textes","permalink":"exporter-lhistorique-telegram-dans-des-fichiers-textes","datePublished":"2022-03-20T23:17","dateUpdated":"2022-03-20T23:17","publish":true,"rss":true},"__N_SSG":true}