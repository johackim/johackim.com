{"pageProps":{"source":{"compiledSource":"\"use strict\";\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    a: \"a\",\n    blockquote: \"blockquote\",\n    code: \"code\",\n    div: \"div\",\n    h2: \"h2\",\n    hr: \"hr\",\n    li: \"li\",\n    line: \"line\",\n    p: \"p\",\n    path: \"path\",\n    pre: \"pre\",\n    svg: \"svg\",\n    ul: \"ul\",\n    ..._provideComponents(),\n    ...props.components\n  };\n  return _jsxs(_Fragment, {\n    children: [_jsxs(_components.p, {\n      children: [\"Pour démarrer macOS sur \", _jsx(_components.a, {\n        href: \"/linux\",\n        title: \"Linux\",\n        children: \"Linux\"\n      }), \", il existe 2 solutions :\"]\n    }), \"\\n\\n\", _jsx(_components.h2, {\n      children: \"Avec mac-on-linux-with-qemu\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Il existe \", _jsx(_components.a, {\n        href: \"https://github.com/arindas/mac-on-linux-with-qemu\",\n        children: \"ce dépôt Github\"\n      }), \" qui permet de démarrer macOS en une seule ligne de commande à condition d'avoir les prérequis suivants :\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-bash\",\n        children: \"# Arch Linux\\nsudo pacman -Syy qemu python-click qemu-ui-gtk qemu-ui-sdl\\nyay -S --noconfirm dmg2img\\n\\n# Debian, Ubuntu\\nsudo apt install -y qemu-kvm dmg2img pulseaudio\\nsudo pip install -U click\\nsudo ln -s /usr/bin/qemu-system-x86_64 /usr/bin/qemu\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Une fois installé exécuter la commande \", _jsx(_components.code, {\n        children: \"run.sh\"\n      }), \" :\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-bash\",\n        children: \"git clone https://github.com/arindas/mac-on-linux-with-qemu\\ncd mac-on-linux-with-qemu\\n./run.sh\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.blockquote, {\n      className: \"callout note\",\n      children: [\"\\n                    \\n                        \", _jsxs(_components.div, {\n        className: \"callout-title\",\n        children: [\"\\n                            \", _jsx(_components.div, {\n          className: \"callout-icon\",\n          children: _jsxs(_components.svg, {\n            xmlns: \"http://www.w3.org/2000/svg\",\n            width: \"24\",\n            height: \"24\",\n            viewBox: \"0 0 24 24\",\n            fill: \"none\",\n            stroke: \"currentColor\",\n            strokeWidth: \"2\",\n            strokeLinecap: \"round\",\n            strokeLinejoin: \"round\",\n            children: [_jsx(_components.line, {\n              x1: \"18\",\n              y1: \"2\",\n              x2: \"22\",\n              y2: \"6\"\n            }), _jsx(_components.path, {\n              d: \"M7.5 20.5 19 9l-4-4L3.5 16.5 2 22z\"\n            })]\n          })\n        }), \"\\n                            \", _jsx(_components.div, {\n          className: \"callout-title-inner\",\n          children: \"note\"\n        }), \"\\n                        \"]\n      }), \"\\n                    \\n                    \", _jsxs(_components.div, {\n        className: \"callout-content\",\n        children: [\"\\n                        \", _jsx(_components.p, {\n          children: \"Choose Disk Utility and then select the largest Apple Inc. VirtIO Block Media disk.Click the Erase button to format the disk to APFS, and give it any recognizable name you like.\"\n        }), \"\\n                    \"]\n      }), \"\\n                \"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"CTRL\"\n      }), \" + \", _jsx(_components.code, {\n        children: \"ALT\"\n      }), \" + \", _jsx(_components.code, {\n        children: \"G\"\n      }), \" pour sortir de la VM.\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Avec QuickEmu\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Vous pouvez aussi utiliser \", _jsx(_components.a, {\n        href: \"/quickemu\",\n        title: \"Quickemu\",\n        children: \"Quickemu\"\n      }), \" :\"]\n    }), \"\\n\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-bash\",\n        children: \"yay -S --noconfirm quickemu qemu qemu-ui-gtk qemu-ui-sdl\\nquickget macos catalina\\nquickemu --vm macos-catalina.conf\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Une fois macOS démarré, supprimez la partition \", _jsx(_components.code, {\n        children: \"Apple Inc. VirtIO Block Media\"\n      }), \" puis lancez l'installation.\"]\n    }), \"\\n\", _jsx(_components.hr, {}), \"\\n\", _jsx(_components.p, {\n      children: \"Références :\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"https://korben.info/vm-macos-linux.html\",\n          children: \"https://korben.info/vm-macos-linux.html\"\n        })\n      }), \"\\n\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{"datePublished":"2021-08-22T20:37","dateUpdated":"2021-08-22T20:37","permalink":"demarrer-macos-sur-linux","publish":true,"rss":true},"scope":{}},"isIndex":false,"file":"Démarrer macOS sur Linux.md","fileName":"Démarrer macOS sur Linux","comments":true,"title":"Démarrer macOS sur Linux","permalink":"demarrer-macos-sur-linux","datePublished":"2021-08-22T20:37","dateUpdated":"2021-08-22T20:37","publish":true,"rss":true},"__N_SSG":true}