{"pageProps":{"source":{"compiledSource":"\"use strict\";\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    a: \"a\",\n    code: \"code\",\n    h2: \"h2\",\n    p: \"p\",\n    pre: \"pre\",\n    ..._provideComponents(),\n    ...props.components\n  };\n  return _jsxs(_Fragment, {\n    children: [_jsxs(_components.p, {\n      children: [_jsx(_components.a, {\n        href: \"https://github.com/Jackett/Jackett\",\n        children: \"Jackett\"\n      }), \" est un métamoteur de torrents open-source.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Il peut être intégré dans des outils de recherche de torrent comme qBittorrent par exemple.\"\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Installation\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Pour l'installer avec Docker, exécutez la commande suivante :\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-bash\",\n        children: \"docker run -d --name jackett --restart=always --pull always -v ~/.config/jackett/config:/config -v ~/.config/jackett/downloads:/downloads -p 9117:9117 linuxserver/jackett\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Vous pouvez ensuite vous rendre à l'adresse \", _jsx(_components.a, {\n        href: \"http://localhost:9117/\",\n        children: \"http://localhost:9117/\"\n      }), \" pour ajouter des Trackers torrent.\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Utilisation avec Flaresolverr\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Vous pouvez aussi paramétrer \", _jsx(_components.a, {\n        href: \"/contourner-la-protection-cloudflare\",\n        title: \"Flaresolverr\",\n        children: \"Flaresolverr\"\n      }), \" pour contourner la protection de Cloudflare si besoin.\"]\n    }), \"\\n\\n\", _jsx(_components.p, {\n      children: \"Pour démarrer Flaresolverr avec Jackett, exécutez les commandes suivantes :\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-bash\",\n        children: \"docker network create jackett\\ndocker run -d --name flaresolverr --restart=always --pull always --network jackett -p 8191:8191 -e LOG_LEVEL=info ghcr.io/flaresolverr/flaresolverr:latest\\ndocker run -d --name jackett --restart=always --pull always --network jackett -v ~/.config/jackett/config:/config -v ~/.config/jackett/downloads:/downloads -p 9117:9117 linuxserver/jackett\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Et renseignez dans \", _jsx(_components.a, {\n        href: \"http://flaresolverr:8191\",\n        children: \"http://flaresolverr:8191\"\n      }), \" dans le paramètre \", _jsx(_components.code, {\n        children: \"FlareSolverr API URL\"\n      }), \" sur Jackett.\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{"title":"Jackett","permalink":"jackett","description":"Jackett est un métamoteur de torrents open-source.","datePublished":"2021-05-30T19:50","dateUpdated":"2024-06-22T19:50:00","publish":true,"rss":true},"scope":{}},"isIndex":false,"file":"Jackett.md","fileName":"Jackett","comments":true,"title":"Jackett","permalink":"jackett","description":"Jackett est un métamoteur de torrents open-source.","datePublished":"2021-05-30T19:50","dateUpdated":"2024-06-22T19:50:00","publish":true,"rss":true},"__N_SSG":true}