{"pageProps":{"source":{"compiledSource":"\"use strict\";\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    a: \"a\",\n    code: \"code\",\n    h2: \"h2\",\n    hr: \"hr\",\n    li: \"li\",\n    p: \"p\",\n    pre: \"pre\",\n    ul: \"ul\",\n    ..._provideComponents(),\n    ...props.components\n  };\n  return _jsxs(_Fragment, {\n    children: [_jsxs(_components.p, {\n      children: [\"Pour changer de version de Python facilement, de la même manière que nvm pour NodeJS, il existe l'outil \", _jsx(_components.a, {\n        href: \"https://github.com/pyenv/pyenv\",\n        children: \"pyenv\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Installation de pyenv\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Pour l'installer, exécutez les commandes suivantes en provenance de \", _jsx(_components.a, {\n        href: \"https://github.com/pyenv/pyenv-installer\",\n        children: \"ce dépôt Github\"\n      }), \" :\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-bash\",\n        children: \"curl https://pyenv.run | bash\\necho 'export PATH=\\\"$PATH:$HOME/.pyenv/bin\\\"' >> ~/.bashrc\\necho 'eval \\\"$(pyenv init --path)\\\"' >> ~/.bashrc\\necho 'eval \\\"$(pyenv virtualenv-init -)\\\"' >> ~/.bashrc\\nsource ~/.bashrc\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Utilisation de pyenv\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Pour installer une nouvelle version de Python :\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-bash\",\n        children: \"pyenv install -v 3.7.0\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Pour switcher sur cette nouvelle version :\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-bash\",\n        children: \"pyenv global 3.7.0\\n\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-bash\",\n        children: \"python -V\\n# Python 3.7.0\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Pour revenir sur la version python de notre système :\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-bash\",\n        children: \"pyenv global system\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"(Facultatif) Fix temporaire\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"J'ai un souci avec \", _jsx(_components.code, {\n        children: \"pip\"\n      }), \" qui me renvoie une erreur : \", _jsx(_components.code, {\n        children: \"~/.pyenv/pyenv.d/exec/pip-rehash/pip: line 20: 38799 Segmentation fault (core dumped) \\\"$PYENV_COMMAND_PATH\\\" \\\"$@\\\"\"\n      }), \".\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Pour régler le problème je commente une ligne du fichier \", _jsx(_components.code, {\n        children: \"~/.pyenv/versions/3.7.0/bin/pip3.7\"\n      }), \" :\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-python\",\n        children: \"# sys.argv[0] = re.sub(r'(-script\\\\.pyw?|\\\\.exe)?$', '', sys.argv[0])\\n\"\n      })\n    }), \"\\n\", _jsx(_components.hr, {}), \"\\n\", _jsx(_components.p, {\n      children: \"Références :\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"\\n\", _jsx(_components.a, {\n          href: \"/python\",\n          title: \"Python\",\n          className: \"not-found\",\n          children: \"Python\"\n        }), \"\\n\\n\"]\n      }), \"\\n\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{"title":"Changer la version de python facilement avec pyenv","permalink":"changer-la-version-de-python-facilement-avec-pyenv","datePublished":"2021-09-27T22:29","dateUpdated":"2021-09-27T22:29","publish":true,"rss":true},"scope":{}},"isIndex":false,"file":"pyenv.md","fileName":"pyenv","comments":true,"title":"Changer la version de python facilement avec pyenv","permalink":"changer-la-version-de-python-facilement-avec-pyenv","datePublished":"2021-09-27T22:29","dateUpdated":"2021-09-27T22:29","publish":true,"rss":true},"__N_SSG":true}