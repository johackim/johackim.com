{"pageProps":{"source":{"compiledSource":"\"use strict\";\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    a: \"a\",\n    code: \"code\",\n    h2: \"h2\",\n    hr: \"hr\",\n    img: \"img\",\n    li: \"li\",\n    p: \"p\",\n    pre: \"pre\",\n    strong: \"strong\",\n    ul: \"ul\",\n    ..._provideComponents(),\n    ...props.components\n  };\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.p, {\n      children: \"Pour afficher tout un tas d'indicateurs clés et statistiques sur un écran, je me suis fabriqué un petit tableau de bord maison sur un Raspberry Pi.\"\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Introduction\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"J'aime bien le concept de \", _jsx(_components.strong, {\n        children: \"Data Driven\"\n      }), \" (pilotage par la donnée), c'est un moyen simple de prendre des décisions en se basant sur autre chose que de simples hypothèses.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Grâce à ce \", _jsx(_components.strong, {\n        children: \"dashboard\"\n      }), \", je visualise rapidement l'état d'avancement de mes tâches en cours, ce qu'il me reste à faire et mes \", _jsx(_components.strong, {\n        children: \"objectifs à atteindre\"\n      }), \" le tout \", _jsx(_components.strong, {\n        children: \"regroupé à un seul endroit\"\n      }), \".\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Ce dashboard fait partie de mes sources de \", _jsx(_components.strong, {\n        children: \"motivation\"\n      }), \", je peux me fixer des objectifs qui seront affichés en permanence à côté de moi lorsque je travaille.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Dans mon cas, les données utilisées derrière mon dashboard sont gérées par des solutions \", _jsx(_components.strong, {\n        children: \"open-source\"\n      }), \" (raspberry, \", _jsx(_components.a, {\n        href: \"https://taiga.io/\",\n        children: \"taiga\"\n      }), \", \", _jsx(_components.a, {\n        href: \"http://metabase.com/\",\n        children: \"metabase\"\n      }), \" et \", _jsx(_components.a, {\n        href: \"https://matomo.org/\",\n        children: \"piwik\"\n      }), \") auto-hébergé sur mes propres serveurs dont une grande partie se situe chez moi.\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Installation\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.strong, {\n        children: \"Prérequis\"\n      }), \" :\"]\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"Un \", _jsx(_components.strong, {\n          children: \"écran\"\n        }), \" avec entrée HDMI.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"Un \", _jsx(_components.strong, {\n          children: \"raspberry PI\"\n        }), \" avec sa \", _jsx(_components.strong, {\n          children: \"carte SD\"\n        }), \" et son \", _jsx(_components.strong, {\n          children: \"alimentation\"\n        }), \".\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"Un \", _jsx(_components.strong, {\n          children: \"câble HDMI\"\n        }), \".\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"Quelques notions en ligne de commande \", _jsx(_components.strong, {\n          children: \"Linux\"\n        }), \".\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Niveau hardware, j'ai utilisé un simple \", _jsx(_components.a, {\n        href: \"https://kubii.fr/fr/pi-zero-w/1851-raspberry-pi-zero-w-3272496006997.html\",\n        children: \"Rasbperry Pi Zero W\"\n      }), \" avec Raspbian comme distribution Linux. Pour installer Raspbian il vous suffit de télécharger le \", _jsx(_components.a, {\n        href: \"https://raspberrypi.org/downloads/\",\n        children: \"fichier .img\"\n      }), \" et de le graver sur une carte SD avec un logiciel comme \", _jsx(_components.a, {\n        href: \"https://etcher.io/\",\n        children: \"etcher\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.img, {\n        src: \"https://i.imgur.com/G5MVfJT.jpg\",\n        alt: \"Rasbperry Pi Zero W\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Une fois votre raspberry branché et démarré, il vous faut exécuter cette commande avec l'utilisateur \", _jsx(_components.code, {\n        children: \"pi\"\n      }), \" pour installer les prérequis :\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-bash\",\n        children: \"curl -L https://git.io/vAxR5 | sudo bash\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Maintenant, il vous reste plus qu'à éditer le fichier \", _jsx(_components.code, {\n        children: \"~/.i3/config\"\n      }), \" pour renseigner l'URL d'accès à votre dashboard.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"L'URL peut provenir de n'importe quel service comme \", _jsx(_components.a, {\n        href: \"https://matomo.org/\",\n        children: \"piwik\"\n      }), \", \", _jsx(_components.a, {\n        href: \"https://metabase.com/\",\n        children: \"metabase\"\n      }), \", \", _jsx(_components.a, {\n        href: \"https://elastic.co/products/kibana\",\n        children: \"kibana\"\n      }), \", \", _jsx(_components.a, {\n        href: \"https://goaccess.io/\",\n        children: \"goaccess\"\n      }), \", \", _jsx(_components.a, {\n        href: \"https://grafana.com/\",\n        children: \"grafana\"\n      }), \", \", _jsx(_components.a, {\n        href: \"https://my-netdata.io/\",\n        children: \"NetData\"\n      }), \" ou \", _jsx(_components.a, {\n        href: \"http://dashing.io/\",\n        children: \"Dashing\"\n      }), \" etc...\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Voilà, votre dashboard s'affichera à chaque démarrage de votre Raspberry Pi !\"\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Détails de l'installation\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Pour les curieux, voilà les détails de ce qu'il se passe derrière l'installation :\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-bash\",\n        children: \"#!/bin/bash\\n\\n# Install dependencies\\nsudo apt-get update\\nsudo apt-get install -y i3 dmenu rxvt-unicode xorg xinit xdotool surf\\n\\n# Autologin\\nsudo systemctl enable autologin@.service\\n\\n# i3 configuration\\nmkdir -p ~/.i3 && cat > ~/.i3/config << EOF\\nbindsym $mod+b bar mode toggle\\nfont pango:monospace 8\\nfor_window [class=\\\"Surf\\\"] fullscreen\\nexec --no-startup-id xset -dpms\\nexec --no-startup-id xset s off\\nexec --no-startup-id xdotool mousemove 9999 9999\\nexec --no-startup-id surf -K https://github.com/johackim # URL TO EDIT\\nEOF\\necho 'exec i3' >> ~/.xinitrc\\necho '[[ -z $DISPLAY && $XDG_VTNR -eq 1 ]] && exec startx' > ~/.bash_profile\\n\\nexit 0\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Ce code aura simplement pour objectif d'installer un petit gestionnaire de fenêtre \", _jsx(_components.strong, {\n        children: _jsx(_components.a, {\n          href: \"http://i3wm.org/\",\n          children: \"i3\"\n        })\n      }), \" et \", _jsx(_components.strong, {\n        children: \"surf\"\n      }), \" en tant que navigateur web très léger.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.strong, {\n        children: \"xdotool\"\n      }), \" se chargera de mettre le navigateur en fullscreen avec la touche \", _jsx(_components.strong, {\n        children: \"F11\"\n      }), \" quelques secondes après le démarrage de i3.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"EDIT: le paramètre \", _jsx(_components.code, {\n        children: \"surf -K\"\n      }), \" sera utilisé pour mettre le navigateur en fullscreen.\\nMerci \", _jsx(_components.a, {\n        href: \"https://journalduhacker.net/u/Breizh\",\n        children: \"Breizh\"\n      }), \" ;)\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Mon tableau de bord\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Personnellement, j'utilise \", _jsx(_components.a, {\n        href: \"https://metabase.com/\",\n        children: \"Metabase\"\n      }), \" en tant que tableau de bord pour afficher des statistiques provenant des bases de données de \", _jsx(_components.a, {\n        href: \"https://matomo.org/\",\n        children: \"piwik\"\n      }), \", \", _jsx(_components.a, {\n        href: \"https://taiga.io/\",\n        children: \"taiga\"\n      }), \" et \", _jsx(_components.a, {\n        href: \"https://zabbix.com/\",\n        children: \"zabbix\"\n      }), \". J'ai aussi un petit \", _jsx(_components.a, {\n        href: \"https://github.com/johackim/node-stats\",\n        children: \"script maison\"\n      }), \" qui parse et stocke en permanence des données provenant de \", _jsx(_components.a, {\n        href: \"http://github.com/johackim\",\n        children: \"github\"\n      }), \" et \", _jsx(_components.a, {\n        href: \"https://mastodon.ethibox.fr/@johackim\",\n        children: \"mastodon\"\n      }), \" dans une base de données MySQL.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.img, {\n        src: \"https://i.imgur.com/vzTehLA.jpeg\",\n        alt: \"Apperçu de mon dashboard\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Pour le moment, je peux voir des métriques comme :\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"L'état d'avancement du sprint en cours (\", _jsx(_components.a, {\n          href: \"https://wikiwand.com/en/Scrum_(software_development)\",\n          children: \"Scrum\"\n        }), \") ; tâches planifiées (TODO), en cours (DOING) et terminées (DONE).\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"Le nombre de visites par mois de \", _jsx(_components.a, {\n          href: \"https://johackim.com/\",\n          children: \"mon blog\"\n        }), \".\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"le nombre de followers \", _jsx(_components.a, {\n          href: \"https://mastodon.ethibox.fr/@johackim\",\n          children: \"mastodon\"\n        }), \" et \", _jsx(_components.a, {\n          href: \"https://github.com/johackim/\",\n          children: \"github\"\n        }), \".\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"Le nombre de dysfonctionnements de mon infrastructure via \", _jsx(_components.a, {\n          href: \"https://zabbix.com/\",\n          children: \"zabbix\"\n        }), \".\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"L'URL publique de mon dashboard Metabase ressemble à ça :\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.a, {\n        href: \"http://192.168.1.50:3000/public/dashboard/df627c68-8020#refresh=60&theme=night\",\n        children: \"http://192.168.1.50:3000/public/dashboard/df627c68-8020#refresh=60&theme=night\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Elle est seulement accessible sur mon réseau local et dispose de deux paramètres ; \", _jsx(_components.code, {\n        children: \"refresh=60\"\n      }), \" pour le nombre de secondes avant chaque rafraichissement et \", _jsx(_components.code, {\n        children: \"theme=night\"\n      }), \" pour le mode nuit.\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Conclusion\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Vous pouvez afficher ce que vous voulez sur votre écran: un \", _jsx(_components.strong, {\n        children: \"tableau de bord\"\n      }), \" comme dans mon cas, une \", _jsx(_components.strong, {\n        children: \"vidéo\"\n      }), \" qui tourne en boucle, une \", _jsx(_components.strong, {\n        children: \"photo\"\n      }), \", un \", _jsx(_components.strong, {\n        children: \"site internet\"\n      }), \", etc...\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"De mon côté je vais surement remplacer \", _jsx(_components.strong, {\n        children: _jsx(_components.a, {\n          href: \"https://metabase.com/\",\n          children: \"Metabase\"\n        })\n      }), \" par une solution comme \", _jsx(_components.strong, {\n        children: _jsx(_components.a, {\n          href: \"http://elastic.co/\",\n          children: \"Elastic\"\n        })\n      }), \" (je ferai un article à cette occasion). Je trouve que ma solution avec \", _jsx(_components.a, {\n        href: \"https://metabase.com/\",\n        children: \"Metabase\"\n      }), \" est difficile à maintenir et consomme trop de ressources.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Je pense aussi améliorer la pertinence de mes métriques et en ajouter d'autres :\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"Métriques pirates : \", _jsx(_components.strong, {\n          children: \"AARRR\"\n        })]\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.strong, {\n          children: \"Velocity chart\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.strong, {\n          children: \"Burndown chart\"\n        })\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"Pourcentage de progression de mes \", _jsx(_components.strong, {\n          children: \"Epics\"\n        })]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \"Taux de disponibilité\"\n        }), \" de mes sites internet\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Et vous ? Il y a quoi derrière votre dashboard ?\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Bonne semaine ;)\"\n    }), \"\\n\", _jsx(_components.hr, {}), \"\\n\", _jsx(_components.p, {\n      children: \"Références :\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"\\n\", _jsx(_components.a, {\n          href: \"/hebergement-web\",\n          title: \"Hébergement web\",\n          children: \"Hébergement web\"\n        }), \"\\n\\n\"]\n      }), \"\\n\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{"title":"Comment se configurer un tableau de bord maison ?","permalink":"comment-configurer-tableau-de-bord-maison","datePublished":"2018-02-12T08:00","dateUpdated":"2018-02-12T08:00","description":"Pour afficher tout un tas d'indicateurs clés et statistiques sur un écran, je me suis fabriqué un petit tableau de bord maison sur un Raspberry Pi.","aliases":["Comment se configurer un tableau de bord maison ?"],"publish":true,"rss":true},"scope":{}},"isIndex":false,"file":"Tableau de bord maison.md","fileName":"Tableau de bord maison","comments":true,"title":"Comment se configurer un tableau de bord maison ?","permalink":"comment-configurer-tableau-de-bord-maison","datePublished":"2018-02-12T08:00","dateUpdated":"2018-02-12T08:00","description":"Pour afficher tout un tas d'indicateurs clés et statistiques sur un écran, je me suis fabriqué un petit tableau de bord maison sur un Raspberry Pi.","aliases":["Comment se configurer un tableau de bord maison ?"],"publish":true,"rss":true},"__N_SSG":true}