{"pageProps":{"source":{"compiledSource":"\"use strict\";\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    a: \"a\",\n    code: \"code\",\n    h2: \"h2\",\n    hr: \"hr\",\n    li: \"li\",\n    p: \"p\",\n    pre: \"pre\",\n    ul: \"ul\",\n    ..._provideComponents(),\n    ...props.components\n  };\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.p, {\n      children: \"Il existe plusieurs façons de démarrer un serveur HTTP en ligne de commande.\"\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Python\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-bash\",\n        children: \"python3 -m http.server 5000\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"PHP\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-bash\",\n        children: \"php -S 0.0.0.0:5000\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Nodejs (http-server)\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-bash\",\n        children: \"npm i -g http-server\\nhttp-server -p 5000\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Nodejs (serve)\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-bash\",\n        children: \"npm i -g serve\\nserve\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Miniserve\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-bash\",\n        children: \"sudo pacman -S miniserve\\nminiserve\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Webfsd\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-bash\",\n        children: \"yay -S --noconfirm webfs\\nwebfsd -F -p 5000\\n\"\n      })\n    }), \"\\n\", _jsx(_components.hr, {}), \"\\n\", _jsx(_components.p, {\n      children: \"Références :\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"https://gist.github.com/willurd/5720255\",\n          children: \"https://gist.github.com/willurd/5720255\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"https://github.com/rejetto/hfs/\",\n          children: \"https://github.com/rejetto/hfs/\"\n        })\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"\\n\", _jsx(_components.a, {\n          href: \"/nginx\",\n          title: \"Nginx\",\n          className: \"not-found\",\n          children: \"Nginx\"\n        }), \"\\n\\n\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"\\n\", _jsx(_components.a, {\n          href: \"/apache\",\n          title: \"Apache\",\n          className: \"not-found\",\n          children: \"Apache\"\n        }), \"\\n\\n\"]\n      }), \"\\n\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{"title":"Démarrer un serveur HTTP en ligne de commande","permalink":"demarrer-un-serveur-http-en-ligne-de-commande","datePublished":"2021-07-05T16:31","dateUpdated":"2021-07-05T16:31","aliases":["Server HTTP","Web server","Serveur HTTP","Serveur Web"],"publish":true,"rss":true},"scope":{}},"isIndex":false,"file":"Serveur Web.md","fileName":"Serveur Web","comments":true,"title":"Démarrer un serveur HTTP en ligne de commande","permalink":"demarrer-un-serveur-http-en-ligne-de-commande","datePublished":"2021-07-05T16:31","dateUpdated":"2021-07-05T16:31","aliases":["Server HTTP","Web server","Serveur HTTP","Serveur Web"],"publish":true,"rss":true},"__N_SSG":true}