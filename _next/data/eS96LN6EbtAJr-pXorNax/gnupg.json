{"pageProps":{"source":{"compiledSource":"\"use strict\";\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    a: \"a\",\n    blockquote: \"blockquote\",\n    code: \"code\",\n    div: \"div\",\n    h2: \"h2\",\n    hr: \"hr\",\n    li: \"li\",\n    p: \"p\",\n    path: \"path\",\n    pre: \"pre\",\n    strong: \"strong\",\n    svg: \"svg\",\n    ul: \"ul\",\n    ..._provideComponents(),\n    ...props.components\n  };\n  return _jsxs(_Fragment, {\n    children: [_jsxs(_components.p, {\n      children: [\"GnuPG (ou GPG) est un outil de chiffrement disponible sur \", _jsx(_components.a, {\n        href: \"https://gnupg.org/\",\n        children: \"Linux\"\n      }), \", \", _jsx(_components.a, {\n        href: \"https://gpg4win.org/\",\n        children: \"Windows\"\n      }), \" et \", _jsx(_components.a, {\n        href: \"https://gpgtools.org/\",\n        children: \"macOS\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Installation\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Installation sur Debian ou Ubuntu :\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-bash\",\n        children: \"apt update && apt install -y gpg\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Installation sur Arch Linux :\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-bash\",\n        children: \"sudo pacman -S gnupg\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Initialisation\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Pour initialiser GnuPG, il faut créer une clé de chiffrement\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Exécuter la commande suivante pour générer une clé de chiffrement :\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-bash\",\n        children: \"gpg --gen-key\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Durant l'exécution, vous allez devoir définir un nom d'utilisateur, un email et une passphrase.\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"N'oubliez pas de définir les bon droits pour le dossier \", _jsx(_components.code, {\n        children: \".gnupg\"\n      }), \" avec un bon \", _jsx(_components.code, {\n        children: \"chmod\"\n      }), \" des familles :\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-bash\",\n        children: \"chmod 600 .gnupg\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.strong, {\n        children: \"IMPORTANT\"\n      }), \" : Le dossier \", _jsx(_components.code, {\n        children: \"~/.gnupg/\"\n      }), \" est votre passphrase est a garder absolument au risque de ne jamais pouvoir déchiffrer vos données chiffrés.\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Lister ses clés GPG\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Pour récupérer la liste de ses clés GPG, exécutez la commande suivante :\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-bash\",\n        children: \"gpg --list-secret-keys --keyid-format LONG\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Le numéro de clé affiché devra être utilisé pour certaines commandes comme \", _jsx(_components.code, {\n        children: \"gpg --delete-keys\"\n      }), \" ou \", _jsx(_components.code, {\n        children: \"gpg --edit-key\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Lister toutes les clés GPG\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-bash\",\n        children: \"gpg --list-keys --keyid-format LONG\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Voir les informations d'un fichier .gpg\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-bash\",\n        children: \"gpg --verbose --decrypt --list-only --dry-run --logger-fd 1 <file.gpg>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Chiffrer un fichier\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Pour chiffrer un fichier :\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-bash\",\n        children: \"gpg -e <file>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Chiffrer un fichier au format ASCII\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Par défaut, les fichiers sont chiffré au format binaire. Pour chiffer un fichier au format ASCII, exécutez la commande suivante :\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-bash\",\n        children: \"gpg -e -a -o <file>.gpg <file>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Convertir un fichier binaire au format ASCII\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-bash\",\n        children: \"gpg --enarmor <file>.gpg\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Déchiffrer un fichier\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Poru déchiffrer un fichier :\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-bash\",\n        children: \"gpg -d <file>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Chiffrer un dossier\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"GnuPG ne permet pas de chiffrer directement un dossier. Cependant, vous pouvez archivez une archive.\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Du coup, archivez votre dossier avec un logiciel d'archivage (ex : \", _jsx(_components.code, {\n        children: \"zip\"\n      }), \", \", _jsx(_components.code, {\n        children: \"7z\"\n      }), \", \", _jsx(_components.code, {\n        children: \"tar.gz\"\n      }), \" ect...), puis chiffrez le :\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-bash\",\n        children: \"zip -r folder.zip <folder>\\ngpg -e folder.zip\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Supprimer une clé\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Pour supprimer une clé :\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-bash\",\n        children: \"gpg --delete-keys <KEY>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Modifier son mot de passe\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Pour modifier son mot de passe :\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-bash\",\n        children: \"gpg --edit-key <KEY>\\ngpg> passwd\\ngpg> save\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Toujours demander le mot de passe\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Si vous souhaitez que votre passphrase soit toujours demandé lors du déchiffrement d'un fichier, éditez le fichier \", _jsx(_components.code, {\n        children: \"~/.gnupg/gpg-agent.conf\"\n      }), \" avec les lignes suivantes :\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-txt\",\n        children: \"default-cache-ttl 0\\nmax-cache-ttl 0\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Récupérer une clé GPG publique\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Pour récupérer une clé publique complète, exécutez la commande suivante :\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-bash\",\n        children: \"gpg --armor --export <KEY_ID>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Changer la date d'expiration d'une clé\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Si vous voulez modifier la date d'expiration d'un clé GPG, exécutez la commande suivante :\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-bash\",\n        children: \"gpg --edit-key <KEY>\\ngpg> expire\\ngpg> save\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"NOTE: Il est possible que la subkey et non la primary key soit expiré, pour la selectionner, tapez \", _jsx(_components.code, {\n        children: \"key <key>\"\n      }), \" puis \", _jsx(_components.code, {\n        children: \"expire\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.strong, {\n        children: \"Que se passe-t-il si votre clé GPG expire ?\"\n      })\n    }), \"\\n\", _jsxs(_components.blockquote, {\n      className: \"callout quote\",\n      children: [\"\\n                    \\n                        \", _jsxs(_components.div, {\n        className: \"callout-title\",\n        children: [\"\\n                            \", _jsx(_components.div, {\n          className: \"callout-icon\",\n          children: _jsxs(_components.svg, {\n            xmlns: \"http://www.w3.org/2000/svg\",\n            width: \"24\",\n            height: \"24\",\n            viewBox: \"0 0 24 24\",\n            fill: \"none\",\n            stroke: \"currentColor\",\n            strokeWidth: \"2\",\n            strokeLinecap: \"round\",\n            strokeLinejoin: \"round\",\n            children: [_jsx(_components.path, {\n              d: \"M3 21c3 0 7-1 7-8V5c0-1.25-.756-2.017-2-2H4c-1.25 0-2 .75-2 1.972V11c0 1.25.75 2 2 2 1 0 1 0 1 1v1c0 1-1 2-2 2s-1 .008-1 1.031V20c0 1 0 1 1 1z\"\n            }), _jsx(_components.path, {\n              d: \"M15 21c3 0 7-1 7-8V5c0-1.25-.757-2.017-2-2h-4c-1.25 0-2 .75-2 1.972V11c0 1.25.75 2 2 2h.75c0 2.25.25 4-2.75 4v3c0 1 0 1 1 1z\"\n            })]\n          })\n        }), \"\\n                            \", _jsx(_components.div, {\n          className: \"callout-title-inner\",\n          children: \"https://g-loaded.eu/2010/11/01/change-expiration-date-gpg-key/\"\n        }), \"\\n                        \"]\n      }), \"\\n                    \\n                    \", _jsxs(_components.div, {\n        className: \"callout-content\",\n        children: [\"\\n                        \", _jsx(_components.p, {\n          children: \"En théorie, le propriétaire d'une clé privée expirée devrait toujours avoir la possibilité de déchiffrer des données et également être en mesure de signer des données, même si toutes les sous-clés publiques de la paire de clés actuelle ont expiré, car il est toujours possible de réinitialiser la date d'expiration sur le clés publiques actuellement expirées.\"\n        }), \"\\n                    \"]\n      }), \"\\n                \"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Chiffer avec vim\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Installer \", _jsx(_components.a, {\n        href: \"https://github.com/jamessan/vim-gnupg\",\n        children: \"vim-gnupg\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-vim\",\n        children: \"let g:GPGDefaultRecipients=[\\\"yourname@yourdomain.com\\\"]\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"gpg-tui\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Pour gérer plus facilement ses clés, il existe \", _jsx(_components.code, {\n        children: \"gpg-tui\"\n      }), \" :\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-bash\",\n        children: \"sudo pacman -S gpg-tui\\n\"\n      })\n    }), \"\\n\", _jsx(_components.hr, {}), \"\\n\", _jsx(_components.p, {\n      children: \"Références :\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"\\n\", _jsx(_components.a, {\n          href: \"/linux\",\n          title: \"Linux\",\n          children: \"Linux\"\n        }), \"\\n\\n\"]\n      }), \"\\n\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{"title":"GnuPG","permalink":"gnupg","datePublished":"2022-06-16T11:54","dateUpdated":"2024-06-17T16:00:00","aliases":["GPG"],"publish":true,"rss":true},"scope":{}},"isIndex":false,"file":"GnuPG.md","fileName":"GnuPG","comments":true,"title":"GnuPG","permalink":"gnupg","datePublished":"2022-06-16T11:54","dateUpdated":"2024-06-17T16:00:00","aliases":["GPG"],"publish":true,"rss":true},"__N_SSG":true}