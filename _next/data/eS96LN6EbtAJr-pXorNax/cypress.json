{"pageProps":{"source":{"compiledSource":"\"use strict\";\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    a: \"a\",\n    code: \"code\",\n    h2: \"h2\",\n    hr: \"hr\",\n    li: \"li\",\n    p: \"p\",\n    pre: \"pre\",\n    ul: \"ul\",\n    ..._provideComponents(),\n    ...props.components\n  };\n  return _jsxs(_Fragment, {\n    children: [_jsxs(_components.p, {\n      children: [_jsx(_components.a, {\n        href: \"https://cypress.io/\",\n        children: \"Cypress\"\n      }), \" est un framework de test E2E Node.js.\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Installation\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Pour l'installer :\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-bash\",\n        children: \"yarn add -D cypress\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Utilisation\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Pour ouvrir l'interface utilisateur :\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-bash\",\n        children: \"npx cypress open\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Démarrer les tests\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-bash\",\n        children: \"npx cypress run\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Démarrer un seul test :\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-bash\",\n        children: \"npx cypress run -s <path>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Configuration\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Créez un fichier \", _jsx(_components.code, {\n        children: \"cypress.json\"\n      }), \" :\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-json\",\n        children: \"cat > cypress.json << EOF\\n{\\n    \\\"fixturesFolder\\\": false,\\n    \\\"pluginsFile\\\": \\\"__tests__/integration/plugins.js\\\",\\n    \\\"integrationFolder\\\": \\\"__tests__/integration/\\\",\\n    \\\"testFiles\\\": \\\"*.spec.js\\\",\\n    \\\"supportFile\\\": false,\\n    \\\"screenshotOnRunFailure\\\": false,\\n    \\\"trashAssetsBeforeRuns\\\": false,\\n    \\\"video\\\": false,\\n    \\\"defaultCommandTimeout\\\": 10000,\\n    \\\"requestTimeout\\\": 10000,\\n    \\\"baseUrl\\\": \\\"http://localhost:3000\\\",\\n    \\\"chromeWebSecurity\\\": false,\\n    \\\"retries\\\": {\\n        \\\"runMode\\\": 2,\\n        \\\"openMode\\\": 0\\n    }\\n}\\nEOF\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Ajoutez si besoin les lignes suivantes dans votre fichier \", _jsx(_components.code, {\n        children: \".eslintrc.json\"\n      }), \" pour configurer Eslint :\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-json\",\n        children: \"{\\n    \\\"plugins\\\": [\\n        \\\"cypress\\\"\\n    ],\\n    \\\"env\\\": {\\n        \\\"cypress/globals\\\": true\\n    }\\n}\\n\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-bash\",\n        children: \"yarn add -D eslint-plugin-cypress\\n\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-bash\",\n        children: \"npm pkg set scripts.test:e2e=\\\"cypress run\\\"\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Ajouter des sélecteurs data-test\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Pour faciliter la sélection de vos éléments HTML, ajoutez des sélecteurs \", _jsx(_components.code, {\n        children: \"data-test\"\n      }), \" ou \", _jsx(_components.code, {\n        children: \"data-testid\"\n      }), \" dans votre code.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Exemples :\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.code, {\n          children: \"<input type=\\\"text\\\" data-test=login-username />\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.code, {\n          children: \"<input type=\\\"text\\\" data-testid=login-username />\"\n        })\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Supporter les variables d'environnement dotenv\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Si vous souhaitez utiliser des variables d'environnements en provenance d'un fichier \", _jsx(_components.code, {\n        children: \".env\"\n      }), \" dans vos tests, installez la librairie suivante :\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-bash\",\n        children: \"yarn add -D cypress-dotenv\\n\"\n      })\n    }), \"\\n\", _jsx(_components.hr, {}), \"\\n\", _jsx(_components.p, {\n      children: \"Références :\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"https://github.com/cypress-io/cypress-realworld-app\",\n          children: \"https://github.com/cypress-io/cypress-realworld-app\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"https://marmelab.com/blog/2023/11/20/screenshot-ci.html\",\n          children: \"https://marmelab.com/blog/2023/11/20/screenshot-ci.html\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"https://pro.academind.com/p/cypress-end-to-end-testing-getting-started\",\n          children: \"https://pro.academind.com/p/cypress-end-to-end-testing-getting-started\"\n        })\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"\\n\", _jsx(_components.a, {\n          href: \"/testing\",\n          title: \"Testing\",\n          className: \"not-found\",\n          children: \"Testing\"\n        }), \"\\n\\n\"]\n      }), \"\\n\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{"title":"Cypress","permalink":"cypress","datePublished":"2022-06-27T12:56","dateUpdated":"2022-06-29T01:29","publish":true,"rss":true},"scope":{}},"isIndex":false,"file":"Cypress.md","fileName":"Cypress","comments":true,"title":"Cypress","permalink":"cypress","datePublished":"2022-06-27T12:56","dateUpdated":"2022-06-29T01:29","publish":true,"rss":true},"__N_SSG":true}