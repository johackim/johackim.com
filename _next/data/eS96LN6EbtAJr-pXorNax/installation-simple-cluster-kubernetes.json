{"pageProps":{"source":{"compiledSource":"\"use strict\";\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    a: \"a\",\n    code: \"code\",\n    h2: \"h2\",\n    h3: \"h3\",\n    hr: \"hr\",\n    li: \"li\",\n    p: \"p\",\n    pre: \"pre\",\n    strong: \"strong\",\n    ul: \"ul\",\n    ..._provideComponents(),\n    ...props.components\n  };\n  return _jsxs(_Fragment, {\n    children: [_jsxs(_components.p, {\n      children: [\"Vu la popularité du projet (dépôt github le plus discuté avec +350 000 commentaires) et faisant partie du monde des containers, je n'ai pas pu résister à l'envie de tester \", _jsx(_components.strong, {\n        children: \"kubernetes\"\n      }), \". Voici deux méthodes pour installer simplement kubernetes. La première est une installation locale avec \", _jsx(_components.a, {\n        href: \"https://github.com/kubernetes/minikube\",\n        children: \"minikube\"\n      }), \", et la deuxième je l'ai réalisé sur \", _jsx(_components.a, {\n        href: \"/comment-creer-son-datacenter-maison\",\n        title: \"mon cluster proxmox\",\n        children: \"mon cluster proxmox\"\n      }), \" avec \", _jsx(_components.a, {\n        href: \"https://github.com/kubernetes/kubeadm\",\n        children: \"kubeadm\"\n      }), \".\"]\n    }), \"\\n\\n\", _jsx(_components.h2, {\n      children: \"1. Installation de Minikube\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.strong, {\n        children: \"NOTE\"\n      }), \": Il est \", _jsx(_components.strong, {\n        children: \"déconseillé\"\n      }), \" d'utiliser \", _jsx(_components.strong, {\n        children: _jsx(_components.a, {\n          href: \"https://github.com/kubernetes/minikube\",\n          children: \"minikube\"\n        })\n      }), \" dans un environnement de production, il s'agit plus d'une installation à usage personnel sur son laptop afin de tester kubernetes.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"L'installation est simple, un binaire à télécharger et à exécuter :\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-bash\",\n        children: \"wget -O /usr/local/bin/minikube https://github.com/kubernetes/minikube/releases/download/v0.23.0/minikube-linux-amd64\\nchmod +x /usr/local/bin/minikube\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Une fois installé on démarre notre cluster kubernetes single node en une seule commande, l'installation se fera à l'intérieur d'une VM, personnellement j'utilise \", _jsx(_components.strong, {\n        children: \"virtualbox\"\n      }), \" :\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-bash\",\n        children: \"minikube start --vm-driver=virtualbox\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"On peut déjà jouer avec \", _jsx(_components.strong, {\n        children: \"kubernetes\"\n      }), \" et installer un blog ghost par exemple :\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-bash\",\n        children: \"kubectl run ghost --image=ghost\\nkubectl expose deployment ghost --type=NodePort --port=80 --target-port=2368\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"L'accès à celui-ci peut se faire de cette façon :\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-bash\",\n        children: \"export IP=$(minikube ip)\\nexport NODE_PORT=$(kubectl get services ghost -o go-template='{{(index .spec.ports 0).nodePort}}')\\ncurl http://$IP:$NODE_PORT\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"2. Installation de Kubeadm\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"L'utilisation de \", _jsx(_components.strong, {\n        children: _jsx(_components.a, {\n          href: \"https://github.com/kubernetes/kubeadm\",\n          children: \"kubeadm\"\n        })\n      }), \" est aussi déconseillée en production car \", _jsx(_components.strong, {\n        children: \"kubeadm\"\n      }), \" est encore en \", _jsx(_components.strong, {\n        children: \"bêta\"\n      }), \", mais n'étant pas un géant du web je me le permets quand même. J'ai déployé plusieurs VM \", _jsx(_components.strong, {\n        children: \"Ubuntu 16.04 LTS\"\n      }), \" sur mon cluster proxmox. Une qui fera office de master et les autres de workers. Sans proxmox vous pouvez très bien créer vos machines via vagrant :\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-bash\",\n        children: \"vagrant init ubuntu/xenial64\\nvagrant up\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"L'installation des dépendances d'un noeud kubernetes (master ou worker) devra s'effectuer comme suit :\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-bash\",\n        children: \"# Installation des dépendances d'un noeud kubernete\\n\\napt-get update && apt-get install -y apt-transport-https docker.io\\necho \\\"deb http://apt.kubernetes.io/ kubernetes-xenial main\\\" >> /etc/apt/sources.list.d/kubernetes.list\\ncurl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add -\\napt-get update && apt-get install -y kubelet kubeadm kubernetes-cni\\nswapoff -a # Kubernetes ne supporte pas le SWAP\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Master node\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Une fois les dépendances installées et le SWAP désactivé sur chacun des noeuds, nous pouvons installer le master :\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-bash\",\n        children: \"kubeadm init --pod-network-cidr=10.32.0.0/12\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Il est possible de gérer notre cluster depuis notre PC avec kubectl, il suffit de copier le fichier \", _jsx(_components.code, {\n        children: \"/etc/kubernetes/admin.conf\"\n      }), \" accessible sur votre noeud master dans votre répertoire \", _jsx(_components.code, {\n        children: \"$HOME/.kube/config\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-bash\",\n        children: \"scp root@<master ip>:/etc/kubernetes/admin.conf ~/.kube/config\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Je suis sur arch linux donc un simple \", _jsx(_components.code, {\n        children: \"pacaur -S kubectl-bin\"\n      }), \" m'installe le client, sinon c'est juste \", _jsx(_components.a, {\n        href: \"https://kubernetes.io/docs/tasks/tools/install-kubectl/\",\n        children: \"un binaire a installer\"\n      }), \".\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Pour vérifier le bon fonctionnement on peut faire un petit \", _jsx(_components.code, {\n        children: \"kubectl version\"\n      }), \" depuis notre PC.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"L'installation d'un \", _jsx(_components.strong, {\n        children: \"pod network add-on\"\n      }), \" est requis, c'est ce qui va permettre de faire communiquer les \", _jsx(_components.strong, {\n        children: \"pods\"\n      }), \" entre eux. Il en existe plusieurs (\", _jsx(_components.a, {\n        href: \"https://kubernetes.io/docs/setup/independent/create-cluster-kubeadm/#pod-network\",\n        children: \"voici la liste\"\n      }), \"), moi j'utilise \", _jsx(_components.strong, {\n        children: \"kube-router\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-bash\",\n        children: \"kubectl apply -f https://raw.githubusercontent.com/cloudnativelabs/kube-router/master/daemonset/kubeadm-kuberouter.yaml\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Après quelques secondes le node master devrait être ready (\", _jsx(_components.code, {\n        children: \"kubectl get nodes\"\n      }), \" pour vérifier).\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Worker nodes\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Pour ajouter d'autres noeuds à notre cluster c'est très simple, la commande \", _jsx(_components.code, {\n        children: \"kubeadm init\"\n      }), \" exécutée précédemment à du vous afficher une commande \", _jsx(_components.code, {\n        children: \"kubeadm join\"\n      }), \" suivit d'un token qui devrait ressembler à ça :\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-bash\",\n        children: \"kubeadm join --token <TOKEN> <IP>\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Une fois cette commande exécutée on vérifie encore une fois que le(s) noeud(s) sont correctement ajouté(s) avec \", _jsx(_components.code, {\n        children: \"kubectl get nodes\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"On peut jouer avec notre cluster et par exemple déployer plusieurs replica de nginx :\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-bash\",\n        children: \"kubectl run ghost --image=nginx\\nkubectl scale deployment nginx --replicas=4\\nkubectl expose deployment nginx --type=NodePort --port=80 --target-port=80\\nexport NODE_PORT=$(kubectl get services nginx -o go-template='{{(index .spec.ports 0).nodePort}}')\\ncurl http://192.168.1.50:$NODE_PORT\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"(Optionel) Utiliser seulement un noeud\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Si vous ne voulez pas utiliser d'autre noeud que le master pour ne pas s'embêter avec plusieurs VM par exemple c'est possible :\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-bash\",\n        children: \"# Allow a single-host cluster\\nkubectl taint nodes --all node-role.kubernetes.io/master-\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"PS: Si jamais vous avez tout cassé ^^ et que votre cluster ne fonctionne plus vous pouvez reset votre installation avec un \", _jsx(_components.code, {\n        children: \"kubeadm reset\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Conclusion\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Kubernetes facilite l'utilisation des containers sur des grosses infrastructures et propose une manière simple de faire de l'auto-scaling. Ça permet de se concentrer sur le développement et l'amélioration de son application et moins sur la gestion de ses serveurs.\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Maintenant il me reste d'autres outils liés à kubernetes à découvrir comme \", _jsx(_components.a, {\n        href: \"https://draft.sh/\",\n        children: \"draft.sh\"\n      }), \", \", _jsx(_components.a, {\n        href: \"https://helm.sh/\",\n        children: \"helm.sh\"\n      }), \" et \", _jsx(_components.a, {\n        href: \"https://github.com/fission/fission\",\n        children: \"fission\"\n      })]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Je n'ai pas abordé les détails de l'utilisation de kubernetes, il s'agit simplement d'un mini guide d'installation pour découvrir l'outil, Si vous souhaitez en savoir davantage sur kubernetes voici quelques ressources qui m'ont été très utiles sur sa compréhension et son utilisation :\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Un \", _jsx(_components.a, {\n        href: \"https://kubernetesbootcamp.github.io/kubernetes-bootcamp/\",\n        children: \"tutoriel interactif\"\n      }), \" très efficace que je conseille à tous. Et ces deux vidéos, la première est théorique et l'autre est plus accès sur la pratique.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Voilà ! Comme d'habitude si vous avez des questions, suggestions n'hésitez pas à les soumettre dans les commentaires ! Bon week-end ;)\"\n    }), \"\\n\", _jsx(_components.hr, {}), \"\\n\", _jsx(_components.p, {\n      children: \"Références :\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"https://github.com/johackim/dotfiles/blob/d4a5a8f5e3390acf9e4dcbfe441a6447279e0527/.cheat/kubernetes\",\n          children: \"Mon aide mémoire des commandes kubernetes\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"https://kubernetes.io/\",\n          children: \"https://kubernetes.io/\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"https://github.com/ramitsurana/awesome-kubernetes/\",\n          children: \"https://github.com/ramitsurana/awesome-kubernetes/\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"http://kubernetesbyexample.com/\",\n          children: \"http://kubernetesbyexample.com/\"\n        })\n      }), \"\\n\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{"title":"Installation simple d'un cluster kubernetes","permalink":"installation-simple-cluster-kubernetes","datePublished":"2017-11-10T17:52","dateUpdated":"2017-11-10T17:52","description":"Voici deux méthodes pour installer simplement kubernetes. La première est une installation locale avec minikube, et la deuxième je l'ai réalisé sur mon cluster proxmox avec kubeadm.","publish":true,"rss":true},"scope":{}},"isIndex":false,"file":"Installation simple d'un cluster kubernetes.md","fileName":"Installation simple d'un cluster kubernetes","comments":true,"title":"Installation simple d'un cluster kubernetes","permalink":"installation-simple-cluster-kubernetes","datePublished":"2017-11-10T17:52","dateUpdated":"2017-11-10T17:52","description":"Voici deux méthodes pour installer simplement kubernetes. La première est une installation locale avec minikube, et la deuxième je l'ai réalisé sur mon cluster proxmox avec kubeadm.","publish":true,"rss":true},"__N_SSG":true}