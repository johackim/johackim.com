{"pageProps":{"source":{"compiledSource":"\"use strict\";\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    code: \"code\",\n    h2: \"h2\",\n    p: \"p\",\n    pre: \"pre\",\n    ..._provideComponents(),\n    ...props.components\n  };\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.p, {\n      children: \"Iptables est un pare-feu pour Linux. Il permet de bloquer ou d'autoriser des connexions entrantes et sortantes.\"\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Installation\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Pour installer iptables sur Ubuntu/Debian, il faut exécuter la commande suivante :\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-bash\",\n        children: \"sudo apt install -y iptables\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Sur Arch Linux, il faut exécuter la commande suivante :\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-bash\",\n        children: \"sudo pacman -S iptables\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Bloquer toutes les connexions entrantes\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Pour bloquer toutes les connexions entrantes, il faut exécuter la commande suivante :\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-bash\",\n        children: \"iptables -P INPUT DROP\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Autoriser toutes les connexions sortantes\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Pour autoriser toutes les connexions sortantes, il faut exécuter la commande suivante :\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-bash\",\n        children: \"iptables -P OUTPUT ACCEPT\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Autoriser les connexions provenant de l'interface de loopback\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"L'interface de loopback permet de communiquer avec le serveur lui-même via l'adresse IP 127.0.0.1.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-bash\",\n        children: \"iptables -A INPUT -i lo -j ACCEPT\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Autoriser le protocole ICMP\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Le protocole ICMP permet de communiquer avec le serveur via la commande \", _jsx(_components.code, {\n        children: \"ping\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Pour l'autoriser, il faut exécuter la commande suivante :\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-bash\",\n        children: \"iptables -A INPUT -p icmp -j ACCEPT\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Autoriser un port spécifique\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Pour autoriser un port spécifique (ex: 22 pour SSH), il faut exécuter la commande suivante :\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-bash\",\n        children: \"iptables -A INPUT -p tcp --dport 22 -j ACCEPT\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Autoriser un nouveau port\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Lorsque tous les ports sont bloqués, pour autoriser un nouveau port, il faut exécuter les commandes suivantes :\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-bash\",\n        children: \"iptables -A INPUT -p tcp -m tcp --dport <new_port> -j ACCEPT\\niptables -A INPUT -j DROP\\niptables -L INPUT --line-numbers # Récupérer l'ID de l'ancienne règle de DROP\\niptables -D INPUT <id> # Supprimer l'anciènne règle de DROP\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Persister la configuration\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Pour persister la configuration et permettre à iptables de se lancer au démarrage :\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-bash\",\n        children: \"iptables-save > /etc/iptables/iptables.rules\\nsudo systemctl enable --now iptables.service\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Vider toutes les règles iptables\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Pour vider toutes les règles iptables, il faut exécuter les commandes suivantes :\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-bash\",\n        children: \"iptables -F\\niptables -F -t mangle\\niptables -F -t nat \\niptables -X\\niptables -X -t mangle\\niptables -X -t nat\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Ma configuration personnelle\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Voici ma configuration personnelle :\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-bash\",\n        children: \"iptables -F\\niptables -F -t mangle\\niptables -F -t nat \\niptables -X\\niptables -X -t mangle\\niptables -X -t nat\\niptables -F INPUT\\niptables -A INPUT -i lo -j ACCEPT\\niptables -A INPUT -m state --state RELATED,ESTABLISHED -j ACCEPT\\niptables -A INPUT -p tcp --dport 22 -j ACCEPT\\niptables -A INPUT -p tcp --dport 80 -j ACCEPT\\niptables -A INPUT -p tcp --dport 443 -j ACCEPT\\niptables -A INPUT -j DROP\\niptables-save > /etc/iptables/iptables.rules\\nsudo systemctl enable --now iptables.service\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Elle permet de bloquer toutes les connexions entrantes.\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{"datePublished":"2021-06-07T20:36","dateUpdated":"2024-02-01T03:57","permalink":"iptables","description":"Iptables est un pare-feu pour Linux. Il permet de bloquer ou d'autoriser des connexions entrantes et sortantes.","publish":true,"rss":true},"scope":{}},"isIndex":false,"file":"iptables.md","fileName":"iptables","comments":true,"title":"iptables","permalink":"iptables","datePublished":"2021-06-07T20:36","dateUpdated":"2024-02-01T03:57","description":"Iptables est un pare-feu pour Linux. Il permet de bloquer ou d'autoriser des connexions entrantes et sortantes.","publish":true,"rss":true},"__N_SSG":true}