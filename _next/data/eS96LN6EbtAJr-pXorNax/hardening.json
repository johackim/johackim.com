{"pageProps":{"source":{"compiledSource":"\"use strict\";\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    a: \"a\",\n    code: \"code\",\n    hr: \"hr\",\n    li: \"li\",\n    p: \"p\",\n    pre: \"pre\",\n    strong: \"strong\",\n    ul: \"ul\",\n    ..._provideComponents(),\n    ...props.components\n  };\n  return _jsxs(_Fragment, {\n    children: [_jsxs(_components.p, {\n      children: [\"Le durcissement (ou \", _jsx(_components.strong, {\n        children: \"hardening\"\n      }), \" en anglais) est un processus destiné à sécuriser un système en réduisant le plus possible sa surface d'attaque.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Pour ça, on supprime tout ce qui n'est pas indispensable :\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Utilisateurs et droits inutiles\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Mots de passe par défaut\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Bibliothèques logicielles inutiles\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Fichiers de configurations inutiles\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Services inutiles\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"etc...\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Pour automatiser ce processus d'hardening sur un serveur Ubuntu ou Debian il est possible d'utiliser Ansible avec le dépot \", _jsx(_components.a, {\n        href: \"https://github.com/dev-sec/ansible-collection-hardening/\",\n        children: \"ansible-collection-hardening\"\n      }), \" :\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-bash\",\n        children: \"apt update && apt install -yq python3-pip && pip3 install ansible\\nansible-galaxy collection install devsec.hardening\\n\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-yaml\",\n        children: \"# playbook.yml\\n- hosts: localhost\\n  collections:\\n    - devsec.hardening\\n  roles:\\n    - os_hardening\\n\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-bash\",\n        children: \"ansible-playbook playbook.yml\\n\"\n      })\n    }), \"\\n\", _jsx(_components.hr, {}), \"\\n\", _jsx(_components.p, {\n      children: \"Références :\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"https://github.com/trimstray/the-practical-linux-hardening-guide\",\n          children: \"https://github.com/trimstray/the-practical-linux-hardening-guide\"\n        })\n      }), \"\\n\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{"datePublished":"2021-05-18T21:17","dateUpdated":"2021-05-18T21:17","permalink":"hardening","publish":true,"rss":true,"aliases":["Durcissement"]},"scope":{}},"isIndex":false,"file":"Hardening.md","fileName":"Hardening","comments":true,"title":"Hardening","permalink":"hardening","datePublished":"2021-05-18T21:17","dateUpdated":"2021-05-18T21:17","publish":true,"rss":true,"aliases":["Durcissement"]},"__N_SSG":true}