{"pageProps":{"source":{"compiledSource":"\"use strict\";\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    a: \"a\",\n    code: \"code\",\n    h2: \"h2\",\n    h3: \"h3\",\n    hr: \"hr\",\n    img: \"img\",\n    li: \"li\",\n    p: \"p\",\n    pre: \"pre\",\n    strong: \"strong\",\n    ul: \"ul\",\n    ..._provideComponents(),\n    ...props.components\n  };\n  return _jsxs(_Fragment, {\n    children: [_jsxs(_components.p, {\n      children: [\"Pour tester la sécurité de mes serveurs et sites internet, je me suis configuré un \", _jsx(_components.strong, {\n        children: \"hacklab\"\n      }), \" sous \", _jsx(_components.strong, {\n        children: \"docker\"\n      }), \" en tant qu'environnement de \", _jsx(_components.strong, {\n        children: \"pentesting\"\n      }), \". Je peux désormais réaliser mes \", _jsx(_components.strong, {\n        children: \"tests d'intrusions\"\n      }), \" depuis tout type d'environnement (\", _jsx(_components.a, {\n        href: \"/linux\",\n        title: \"Linux\",\n        children: \"Linux\"\n      }), \", Mac OS, Windows).\"]\n    }), \"\\n\\n\", _jsxs(_components.p, {\n      children: [\"Voici mon \", _jsx(_components.strong, {\n        children: \"hacklab\"\n      }), \" : \", _jsx(_components.a, {\n        href: \"http://github.com/johackim/docker-hacklab\",\n        children: \"http://github.com/johackim/docker-hacklab\"\n      })]\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.img, {\n        src: \"https://i.imgur.com/DOwUMHk.png\",\n        alt: \"Hacklab\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Je regroupe dans cet environnement virtuel un ensemble d'outils qui me permet de réaliser très rapidement des actions de \", _jsx(_components.strong, {\n        children: \"pentest\"\n      }), \". Une simple commande me permet de démarrer instantanément mon \", _jsx(_components.strong, {\n        children: \"environnement virtuel\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-bash\",\n        children: \"docker run --name hacklab --net=host --privileged -it ston3o/docker-hacklab zsh\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.a, {\n        href: \"http://github.com/johackim/docker-hacklab\",\n        children: \"Ce dépôt github\"\n      }), \" recense toutes les \", _jsx(_components.strong, {\n        children: \"techniques\"\n      }), \" et \", _jsx(_components.strong, {\n        children: \"outils\"\n      }), \" me permettant de mener à bien mes \", _jsx(_components.strong, {\n        children: \"pentest\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"1. README\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Je recense toutes les ressources que je juge utile dans \", _jsx(_components.a, {\n        href: \"https://github.com/johackim/docker-hacklab/blob/master/README.md\",\n        children: \"le fichier README.md\"\n      }), \" que j'améliore au fur et à mesure de mes découvertes, on y trouve actuellement plein de ressources sur le thème de la sécurité :\"]\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.a, {\n          href: \"https://github.com/johackim/docker-hacklab/blob/master/README.md#exploit-database\",\n          children: \"Des bases de données d'exploits\"\n        }), \".\"]\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"https://github.com/johackim/docker-hacklab#other-useful-docker-commands\",\n          children: \"D'autres commandes docker utiles\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"https://github.com/johackim/docker-hacklab#search-engines\",\n          children: \"Des moteurs de recherche d'équipements connectés\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Des sites de doxing\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Des blogs et chaines YouTube\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Des dépôts github\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"2. Cheats\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.img, {\n        src: \"https://i.imgur.com/TyIYrzj.png\",\n        alt: \"\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.a, {\n        href: \"https://github.com/chrisallenlane/cheat\",\n        children: \"Cheat\"\n      }), \" est très pratique pour gérer ses \", _jsx(_components.strong, {\n        children: \"aide-mémoires\"\n      }), \".\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Si par exemple je ne me souviens plus des commandes du framework \", _jsx(_components.strong, {\n        children: \"metasploit\"\n      }), \" :\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-bash\",\n        children: \"$ cheat metasploit\\n\\n# To show all exploits that for a vulnerability\\ngrep <vulnerability> show exploits\\n\\n# To select an exploit to use\\nuse <exploit>\\n\\n# To see the current settings for a selected exploit\\nshow options\\n\\n# To see compatible payloads for a selected exploit\\nshow payloads\\n\\n# To set the payload for a selected exploit\\nset payload <payload>\\n\\n# To set setting for a selected exploit \\nset <option> <value>\\n\\n# To run the exploit\\nexploit\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"On peut aussi éditer ou chercher un aide mémoire.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-bash\",\n        children: \"cheat -e <name> # Editer un aide mémoire\\ncheat -s <word> # Chercher un mot dans nos aide-mémoires\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"3. Dockerfile\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Mon hacklab reprend une image docker officielle de kali auquel j'ai ajouté tous mes outils sous forme de paquets ou dépôts github que je regroupe sous plusieurs catégories dans un fichier \", _jsx(_components.a, {\n        href: \"https://github.com/johackim/docker-hacklab/blob/master/Dockerfile\",\n        children: \"Dockerfile\"\n      }), \" :\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-bash\",\n        children: \"# Footprinting / Information-Gathering / OSINT / Fingerprint\\n# AV Evasion / Dropper\\n# Vulnerability Scanner (SQL, XSS, LFI, RFI etc...)\\n# Pentest Framework\\n# MITM / ARP poisoning / Spoofing / Sniffing\\n# Email Spoofing\\n# Crack password\\n# Hash Manipulation\\n# SQL Injection\\n# Phishing\\n# DOS Tools\\n# Wireless networks\\n# Reverse Engineering\\n# Backdoor / Remote Access Trojan (RAT)\\n# Search exploit\\n# Post exploitation\\n# Privilege escalation\\n# Forensic\\n# Geolocalisation\\n# Shellcode\\n# Wordpress\\n# Bypass CloudFlare\\n# Steganography\\n# Honeypot\\n# Reverse shell\\n# Detect WAF\\n# Remove file metadata\\n# Disassembler / Decompiler\\n# Fuzzing\\n# Paquet manipulation\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Je n'ai pas automatisé les procédures d'installation de tous les outils, n'ayant pas encore trouvé le temps de le faire j'ai simplement cloné les dépôts. À chaque découverte d'un outil de \", _jsx(_components.strong, {\n        children: \"pentesting\"\n      }), \" que je juge utile, je prends quelques secondes pour l'ajouter dans ce \", _jsx(_components.strong, {\n        children: \"Dockerfile\"\n      }), \".\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Vous pouvez reprendre la base de mon \", _jsx(_components.strong, {\n        children: \"Dockerfile\"\n      }), \" et ajouter vos propres outils si vous le souhaitez.\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"4. Alias\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Pour simplifier son utilisation, je me suis créé un \", _jsx(_components.strong, {\n        children: \"alias\"\n      }), \". Il contient un \", _jsx(_components.strong, {\n        children: \"volume docker\"\n      }), \" pour partager des fichiers entre mon host et le container docker.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-bash\",\n        children: \"alias hacklab='docker run -d --name hacklab --net=host --privileged=true -v /tmp:/mnt -it ston3o/docker-hacklab zsh > /dev/null 2>&1; docker start hacklab > /dev/null; docker exec -it hacklab zsh'\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Grâce à ça je peux démarrer mon hacklab avec \", _jsx(_components.strong, {\n        children: \"une simple commande\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-bash\",\n        children: \"hacklab\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Il existe aussi une technique (\", _jsx(_components.strong, {\n        children: \"non conseillé pour des raisons de sécurité\"\n      }), \") qui permet de lancer des applications avec interface graphique depuis un container docker.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-bash\",\n        children: \"docker run --env=\\\"DISPLAY\\\" --env=\\\"QT_X11_NO_MITSHM=1\\\" --volume=\\\"/tmp/.X11-unix:/tmp/.X11-unix:rw\\\" ston3o/docker-hacklab\\nxhost +local:root\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"5. Sources d'informations\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"On n’oublie pas les petits flux RSS qui nous permettent de rester informés des derniers outils et techniques de pentest. C'est en partie grâce à ces sources d'informations que mon Dockerfile a pu évoluer :\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Sites français\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"http://homputersecurity.com/\",\n          children: \"http://homputersecurity.com/\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"http://comptoirsecu.fr/\",\n          children: \"http://comptoirsecu.fr/\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"https://nolimitsecu.fr/\",\n          children: \"https://nolimitsecu.fr/\"\n        })\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Sites anglais\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"http://null-byte.wonderhowto.com/\",\n          children: \"http://null-byte.wonderhowto.com/\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"https://kitploit.com/\",\n          children: \"https://kitploit.com/\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"https://n0where.net/\",\n          children: \"https://n0where.net/\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"http://hackingarticles.in/\",\n          children: \"http://hackingarticles.in/\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"https://pentestlab.blog/\",\n          children: \"https://pentestlab.blog/\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"http://haxf4rall.com/\",\n          children: \"http://haxf4rall.com/\"\n        })\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Conclusion\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"J'utilise ce \", _jsx(_components.strong, {\n        children: \"hacklab\"\n      }), \" pour mon usage personnel, vous pouvez vous en servir, vous en inspirer ou bien créer le vôtre en partant de zéro.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Ce \", _jsx(_components.strong, {\n        children: \"hacklab\"\n      }), \" me permet de regrouper toutes mes techniques, connaissances et découvertes dans le domaine de la \", _jsx(_components.strong, {\n        children: \"sécurité\"\n      }), \". Tout ça est regroupé dans un unique espace de travail plutôt agréable à utiliser.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsxs(_components.strong, {\n        children: [\"Si vous aimez, n'hésitez pas à ajouter une star sur \", _jsx(_components.a, {\n          href: \"https://github.com/johackim/docker-hacklab\",\n          children: \"le dépôt github\"\n        }), \" et à me suivre sur \", _jsx(_components.a, {\n          href: \"http://mastodon.ethibox.fr/@johackim\",\n          children: \"mastodon\"\n        }), \".\"]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Bonne semaine à vous ;)\"\n    }), \"\\n\", _jsx(_components.hr, {}), \"\\n\", _jsx(_components.p, {\n      children: \"Références :\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"\\n\", _jsx(_components.a, {\n          href: \"/cybersecurite\",\n          title: \"Cybersécurité\",\n          children: \"Cybersécurité\"\n        }), \"\\n\\n\"]\n      }), \"\\n\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{"title":"Créer son hacklab virtuel avec docker","permalink":"creer-hacklab-virtuel-docker","datePublished":"2017-12-18T08:00","dateUpdated":"2017-12-18T08:00","description":"Pour tester la sécurité de mes serveurs et sites internet, je me suis configuré un hacklab sous docker en tant qu'environnement de pentesting.","publish":true,"rss":true},"scope":{}},"isIndex":false,"file":"Créer son hacklab virtuel avec docker.md","fileName":"Créer son hacklab virtuel avec docker","comments":true,"title":"Créer son hacklab virtuel avec docker","permalink":"creer-hacklab-virtuel-docker","datePublished":"2017-12-18T08:00","dateUpdated":"2017-12-18T08:00","description":"Pour tester la sécurité de mes serveurs et sites internet, je me suis configuré un hacklab sous docker en tant qu'environnement de pentesting.","publish":true,"rss":true},"__N_SSG":true}