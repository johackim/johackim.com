{"pageProps":{"source":{"compiledSource":"\"use strict\";\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    a: \"a\",\n    blockquote: \"blockquote\",\n    code: \"code\",\n    del: \"del\",\n    div: \"div\",\n    hr: \"hr\",\n    li: \"li\",\n    line: \"line\",\n    p: \"p\",\n    path: \"path\",\n    pre: \"pre\",\n    svg: \"svg\",\n    ul: \"ul\",\n    ..._provideComponents(),\n    ...props.components\n  };\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.p, {\n      children: \"Pour déployer automatiquement son code sur Github Pages, il existe les GitHub Actions.\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Créez un fichier Yaml dans le dossier \", _jsx(_components.code, {\n        children: \".github/workflows/\"\n      }), \" à la racine de votre dépôt git (ex: \", _jsx(_components.code, {\n        children: \".github/workflows/deploy.yml\"\n      }), \").\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-yaml\",\n        children: \"name: Deploy\\n\\non: push\\n\\njobs:\\n  build:\\n    runs-on: ubuntu-latest\\n    steps:\\n      - uses: actions/checkout@v3\\n\\n      - uses: actions/setup-node@v4\\n        with:\\n          node-version: 22\\n\\n      - name: Install packages\\n        run: npm install\\n\\n      - name: Build\\n        run: npm run build\\n\\n      - uses: peaceiris/actions-gh-pages@v4\\n        with:\\n          github_token: ${{ secrets.GITHUB_TOKEN }}\\n          publish_dir: ./public\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsxs(_components.del, {\n        children: [_jsx(_components.a, {\n          href: \"https://github.com/settings/tokens/new\",\n          children: \"Générer un token\"\n        }), \" avec à un accès au scope \", _jsx(_components.code, {\n          children: \"repo\"\n        }), \" puis ajoutez le en tant qu'Action Secret \", _jsx(_components.code, {\n          children: \"GH_TOKEN\"\n        }), \" dans les settings de votre dépot Github (Settings -> Secrets -> New repository secret).\"]\n      }), \" (Utiliser la variable GITHUB_TOKEN autogénéré par Github à la place).\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Sans oubliez de modifier les paramètres du dépôt : \", _jsx(_components.code, {\n        children: \"Settings -> Actions -> General -> Workflow permissions -> Read and write permissions -> Save\"\n      }), \".\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Déployez votre code, et il sera automatiquement déployé sur une branche \", _jsx(_components.code, {\n        children: \"gh-pages\"\n      }), \" à chaque push sur la branche master.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Enfin, activez Github pages dans les Settings -> Pages.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Pour ajouter un nom de domaine root, changez la zone de type A de votre nom de domaine avec l'une des valeurs suivantes :\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-txt\",\n        children: \"185.199.108.153\\n185.199.109.153\\n185.199.110.153\\n185.199.111.153\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.blockquote, {\n      className: \"callout note\",\n      children: [\"\\n                    \\n                        \", _jsxs(_components.div, {\n        className: \"callout-title\",\n        children: [\"\\n                            \", _jsx(_components.div, {\n          className: \"callout-icon\",\n          children: _jsxs(_components.svg, {\n            xmlns: \"http://www.w3.org/2000/svg\",\n            width: \"24\",\n            height: \"24\",\n            viewBox: \"0 0 24 24\",\n            fill: \"none\",\n            stroke: \"currentColor\",\n            strokeWidth: \"2\",\n            strokeLinecap: \"round\",\n            strokeLinejoin: \"round\",\n            children: [_jsx(_components.line, {\n              x1: \"18\",\n              y1: \"2\",\n              x2: \"22\",\n              y2: \"6\"\n            }), _jsx(_components.path, {\n              d: \"M7.5 20.5 19 9l-4-4L3.5 16.5 2 22z\"\n            })]\n          })\n        }), \"\\n                            \", _jsx(_components.div, {\n          className: \"callout-title-inner\",\n          children: \"note\"\n        }), \"\\n                        \"]\n      }), \"\\n                    \\n                    \", _jsxs(_components.div, {\n        className: \"callout-content\",\n        children: [\"\\n                        \", _jsx(_components.p, {\n          children: \"Pour connaitre la liste des adresse IPs, exécutez la commande dig A your_github_username.github.io.\"\n        }), \"\\n                    \"]\n      }), \"\\n                \"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Ou une zone de type CNAME avec \", _jsx(_components.code, {\n        children: \"your_github_username.github.io\"\n      }), \" si vous utilisez un sous-domaine.\"]\n    }), \"\\n\", _jsxs(_components.blockquote, {\n      className: \"callout important\",\n      children: [\"\\n                    \\n                    \", _jsxs(_components.div, {\n        className: \"callout-content\",\n        children: [\"\\n                        \", _jsx(_components.p, {\n          children: \"N'oubliez pas de créer un fichier CNAME avec votre nom de domaine ou sous-domaine à l'intérieur du fichier pour que Github Page garde bien le nom de domaine lors des prochains déploiements.\"\n        }), \"\\n                    \"]\n      }), \"\\n                \"]\n    }), \"\\n\", _jsx(_components.hr, {}), \"\\n\", _jsx(_components.p, {\n      children: \"Références :\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"https://docs.github.com/en/pages/configuring-a-custom-domain-for-your-github-pages-site\",\n          children: \"https://docs.github.com/en/pages/configuring-a-custom-domain-for-your-github-pages-site\"\n        })\n      }), \"\\n\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{"datePublished":"2021-09-16T22:10","dateUpdated":"2021-09-16T22:10","permalink":"deployer-automatiquement-un-depot-sur-github-pages","aliases":["Déployer automatiquement un dépot sur Github Pages"],"publish":true,"rss":true},"scope":{}},"isIndex":false,"file":"Github Pages.md","fileName":"Github Pages","comments":true,"title":"Github Pages","permalink":"deployer-automatiquement-un-depot-sur-github-pages","datePublished":"2021-09-16T22:10","dateUpdated":"2021-09-16T22:10","aliases":["Déployer automatiquement un dépot sur Github Pages"],"publish":true,"rss":true},"__N_SSG":true}