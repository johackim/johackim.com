{"pageProps":{"source":{"compiledSource":"\"use strict\";\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    code: \"code\",\n    p: \"p\",\n    pre: \"pre\",\n    ..._provideComponents(),\n    ...props.components\n  };\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.p, {\n      children: \"Pour initialiser eslint sur un projet JavaScript il existe la commande suivante :\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-bash\",\n        children: \"npm init @eslint/config@v0.4.6\\nnpm pkg set scripts.lint=\\\"eslint .\\\"\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Personnellement j'ajoute les règles suivantes au fichier \", _jsx(_components.code, {\n        children: \".eslintrc.json\"\n      }), \" :\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-js\",\n        children: \"// .eslintrc.json\\n\\\"rules\\\": {\\n    \\\"indent\\\": [2, 4, { \\\"SwitchCase\\\": 1 }],\\n    \\\"max-len\\\": [0],\\n    \\\"object-curly-newline\\\": [0],\\n    \\\"import/no-extraneous-dependencies\\\": [0],\\n    \\\"import/prefer-default-export\\\": [0],\\n    \\\"react/jsx-filename-extension\\\": [1, { \\\"extensions\\\": [\\\".js\\\", \\\".jsx\\\"] }],\\n    \\\"react/jsx-props-no-spreading\\\": [0],\\n    \\\"react/jsx-indent-props\\\": [2, 4],\\n    \\\"react/jsx-indent\\\": [2, 4],\\n    \\\"react/prop-types\\\": [0],\\n    \\\"react/no-unescaped-entities\\\": [0],\\n    \\\"react/function-component-definition\\\": [0],\\n    \\\"react/react-in-jsx-scope\\\": [0],\\n    \\\"no-restricted-syntax\\\": [0],\\n    \\\"complexity\\\": [2, 6],\\n    \\\"max-depth\\\": [2, 2]\\n}\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Si jamais vous rencontrez une erreur \", _jsx(_components.code, {\n        children: \"File ignored by default\"\n      }), \" pour un fichier qui se situe dans un dossier caché (ex: \", _jsx(_components.code, {\n        children: \".storybook\"\n      }), \"), ajoutez la ligne suivante à votre fichier \", _jsx(_components.code, {\n        children: \".eslintrc.json\"\n      }), \" :\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-bash\",\n        children: \"\\\"ignorePatterns\\\": [\\\"!.storybook\\\"],\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Si vous souhaitez ignorer une ligne de code, ajoutez le commentaire \", _jsx(_components.code, {\n        children: \"// eslint-disable-line\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Et pour plusieurs lignes de code :\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-js\",\n        children: \"/* eslint-disable */\\nconsole.log('Mon code javascript');\\n/* eslint-enable */\\n\\n// Ou une règle particulière\\n\\n/* eslint-disable max-lines-per-function */\\nconsole.log('Mon code javascript');\\n/* eslint-enable */\\n\\n// Ou\\n\\n/* eslint-disable-next-line complexity */\\nconsole.log('Mon code javascript');\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Si vous voulez définir des exceptions, ajoutez une ligne \", _jsx(_components.code, {\n        children: \"overrides\"\n      }), \" :\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-json\",\n        children: \"{\\n    \\\"rules\\\": {\\n        \\\"max-lines-per-function\\\": [\\\"error\\\", 25],\\n    },\\n    \\\"overrides\\\": [\\n        {\\n            \\\"files\\\": [\\\"components/**\\\"],\\n            \\\"rules\\\": {\\n                \\\"max-lines-per-function\\\": [\\\"error\\\", 120]\\n            }\\n        }\\n    ]\\n}\\n\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{"title":"Initialiser eslint sur un projet JavaScript","datePublished":"2021-06-07T20:36","dateUpdated":"2021-06-07T20:36","permalink":"initialiser-eslint-sur-un-projet-javascript","publish":true,"rss":true},"scope":{}},"isIndex":false,"file":"Eslint.md","fileName":"Eslint","comments":true,"title":"Initialiser eslint sur un projet JavaScript","permalink":"initialiser-eslint-sur-un-projet-javascript","datePublished":"2021-06-07T20:36","dateUpdated":"2021-06-07T20:36","publish":true,"rss":true},"__N_SSG":true}