{"pageProps":{"source":{"compiledSource":"\"use strict\";\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    a: \"a\",\n    code: \"code\",\n    p: \"p\",\n    pre: \"pre\",\n    strong: \"strong\",\n    ..._provideComponents(),\n    ...props.components\n  };\n  return _jsxs(_Fragment, {\n    children: [_jsxs(_components.p, {\n      children: [\"Après avoir \", _jsx(_components.a, {\n        href: \"/initialiser-un-projet-gatsby\",\n        title: \"Initialiser un projet Gatsby\",\n        children: \"Initialiser un projet Gatsby\"\n      }), \", créez un dossier \", _jsx(_components.code, {\n        children: \"content\"\n      }), \" qui va contenir toutes vos notes au format markdown (ex: \", _jsx(_components.code, {\n        children: \"content/hello-world.md\"\n      }), \").\"]\n    }), \"\\n\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.strong, {\n        children: \"NOTE\"\n      }), \" : Vous pouvez ouvrir se dossier avec Obsidian ou n'importe quel éditeur de fichier markdown pour éditer vos notes.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Installez et configurez le package \", _jsx(_components.code, {\n        children: \"gatsby-source-filesystem\"\n      }), \" & \", _jsx(_components.code, {\n        children: \"gatsby-transformer-remark\"\n      }), \" pour pouvoir detecter les fichiers markdown de votre dossier \", _jsx(_components.code, {\n        children: \"content\"\n      }), \" dans Gatsby  :\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-bash\",\n        children: \"yarn add -D gatsby-source-filesystem gatsby-transformer-remark\\n\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-javascript\",\n        children: \"// gatsby-config.js\\n\\nmodule.exports = {\\n    plugins: [\\n        {\\n            resolve: 'gatsby-source-filesystem',\\n            options: {\\n                path: './content',\\n            },\\n        },\\n        {\\n            resolve: 'gatsby-transformer-remark',\\n        },\\n    ],\\n};\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Créez le fichier \", _jsx(_components.code, {\n        children: \"gatsby-node.js\"\n      }), \" avec la configuration si dessous pour pouvoir créer des pages pour chacune de vos notes markdown :\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-js\",\n        children: \"// gatsby-node.js\\n\\nexports.createPages = async ({ actions, graphql, reporter }) => {\\n    const { createPage } = actions;\\n\\n    const result = await graphql(`\\n        {\\n            allMarkdownRemark {\\n                edges {\\n                    node {\\n                        id\\n                        html\\n                        parent {\\n                            ... on File {\\n                                name\\n                            }\\n                        }\\n                    }\\n                }\\n            }\\n        }\\n    `);\\n\\n    if (result.errors) {\\n        reporter.panicOnBuild('Error while running GraphQL query.');\\n        return;\\n    }\\n\\n    const markdowns = result.data.allMarkdownRemark.edges;\\n\\n    const noteTemplate = require.resolve('./src/templates/noteTemplate.js');\\n\\n    markdowns.forEach(({ node }) => {\\n        const { id, html } = node;\\n\\n        createPage({\\n            path: `/${node.parent.name}`,\\n            component: noteTemplate,\\n            context: { id, html },\\n        });\\n    });\\n};\\n\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-js\",\n        children: \"// src/templates/noteTemplate.js\\n\\nimport React from 'react';\\n\\nexport default function Template({ pageContext }) {\\n    const { html } = pageContext;\\n\\n    return <div dangerouslySetInnerHTML={{ __html: html }} />;\\n}\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Si vous avez une note \", _jsx(_components.code, {\n        children: \"hello-world.md\"\n      }), \" dans votre dossier \", _jsx(_components.code, {\n        children: \"content\"\n      }), \" et que vous vous rendez à l'adresse \", _jsx(_components.a, {\n        href: \"http://localhost:8000/hello-world\",\n        children: \"http://localhost:8000/hello-world\"\n      }), \", cela devrait afficher le contenu de votre fichier markdown.\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{"datePublished":"2021-05-31T16:00","dateUpdated":"2021-05-31T16:00","permalink":"importer-ses-notes-markdown-dans-gatsby","publish":true,"rss":true},"scope":{}},"isIndex":false,"file":"Importer ses notes markdown dans Gatsby.md","fileName":"Importer ses notes markdown dans Gatsby","comments":true,"title":"Importer ses notes markdown dans Gatsby","permalink":"importer-ses-notes-markdown-dans-gatsby","datePublished":"2021-05-31T16:00","dateUpdated":"2021-05-31T16:00","publish":true,"rss":true},"__N_SSG":true}