{"pageProps":{"source":{"compiledSource":"\"use strict\";\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    a: \"a\",\n    blockquote: \"blockquote\",\n    code: \"code\",\n    div: \"div\",\n    h2: \"h2\",\n    hr: \"hr\",\n    li: \"li\",\n    line: \"line\",\n    p: \"p\",\n    package: \"package\",\n    path: \"path\",\n    pre: \"pre\",\n    svg: \"svg\",\n    ul: \"ul\",\n    ..._provideComponents(),\n    ...props.components\n  };\n  return _jsxs(_Fragment, {\n    children: [_jsxs(_components.p, {\n      children: [_jsx(_components.a, {\n        href: \"https://github.com/asdf-vm/asdf\",\n        children: \"Asdf\"\n      }), \" est un gestionnaire de version (version manager) pour Python, Node.js, Ruby, etc. Il permet de changer de version pour chaque langage de programmation sans se prendre la tête.\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Installation\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Si vous êtes sur Arch Linux :\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-bash\",\n        children: \"yay -S --noconfirm asdf-vm\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Puis ajoutez les 2 lignes suivantes dans votre fichier \", _jsx(_components.code, {\n        children: \"~/.bashrc\"\n      }), \" ou \", _jsx(_components.code, {\n        children: \"~/.zshrc\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-bash\",\n        children: \"export ASDF_DATA_DIR=$HOME/.asdf\\nexport PATH=$PATH:$ASDF_DATA_DIR/shims\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Utilisation\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Pour installer un plugin (Node.js, Python, Ruby, etc...), utilisez la commande suivante :\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-bash\",\n        children: \"asdf plugin add nodejs\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Pour lister toutes les versions de Node.js :\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-bash\",\n        children: \"asdf list all nodejs\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Pour installer une version spécifique de Node.js :\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-bash\",\n        children: \"asdf install nodejs 22.19.0\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Pour définir une version globale par défaut :\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-bash\",\n        children: \"asdf set -u nodejs 22.19.0\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Pour définir une version locale :\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-bash\",\n        children: \"asdf set nodejs 22.19.0\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Pour connaitre la version en cours :\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-bash\",\n        children: \"asdf current\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Revenir à la version système d'origine :\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-bash\",\n        children: \"asdf set -u nodejs system\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Lorsque vous installer un package npm global (ex : \", _jsx(_components.code, {\n        children: \"npm i -g yarn\"\n      }), \"), n'oubliez pas d'exécuter la commande suivante pour pouvoir accéder au package :\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-bash\",\n        children: \"asdf reshim nodejs\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.blockquote, {\n      className: \"callout note\",\n      children: [\"\\n                    \\n                        \", _jsxs(_components.div, {\n        className: \"callout-title\",\n        children: [\"\\n                            \", _jsx(_components.div, {\n          className: \"callout-icon\",\n          children: _jsxs(_components.svg, {\n            xmlns: \"http://www.w3.org/2000/svg\",\n            width: \"24\",\n            height: \"24\",\n            viewBox: \"0 0 24 24\",\n            fill: \"none\",\n            stroke: \"currentColor\",\n            strokeWidth: \"2\",\n            strokeLinecap: \"round\",\n            strokeLinejoin: \"round\",\n            children: [_jsx(_components.line, {\n              x1: \"18\",\n              y1: \"2\",\n              x2: \"22\",\n              y2: \"6\"\n            }), _jsx(_components.path, {\n              d: \"M7.5 20.5 19 9l-4-4L3.5 16.5 2 22z\"\n            })]\n          })\n        }), \"\\n                            \", _jsx(_components.div, {\n          className: \"callout-title-inner\",\n          children: \"note\"\n        }), \"\\n                        \"]\n      }), \"\\n                    \\n                    \", _jsxs(_components.div, {\n        className: \"callout-content\",\n        children: [\"\\n                        \", _jsxs(_components.p, {\n          children: [\"Avec Python, si vous rencontrez une erreur lors du lancement d'une commande pip install, exécutez là de cette manière : sudo -E pip install --break-system-packages \", _jsx(_components.package, {\n            children: \".\"\n          })]\n        }), \"\\n                    \"]\n      }), \"\\n                \"]\n    }), \"\\n\", _jsx(_components.hr, {}), \"\\n\", _jsx(_components.p, {\n      children: \"Références :\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"https://github.com/asdf-vm/asdf\",\n          children: \"https://github.com/asdf-vm/asdf\"\n        })\n      }), \"\\n\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{"title":"Asdf","permalink":"asdf","datePublished":"2022-06-16T11:53","dateUpdated":"2025-03-08T09:28:00","publish":true,"rss":true},"scope":{}},"isIndex":false,"file":"Asdf.md","fileName":"Asdf","comments":true,"title":"Asdf","permalink":"asdf","datePublished":"2022-06-16T11:53","dateUpdated":"2025-03-08T09:28:00","publish":true,"rss":true},"__N_SSG":true}