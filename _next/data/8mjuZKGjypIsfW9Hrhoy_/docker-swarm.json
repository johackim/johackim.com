{"pageProps":{"source":{"compiledSource":"\"use strict\";\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    code: \"code\",\n    h2: \"h2\",\n    li: \"li\",\n    p: \"p\",\n    pre: \"pre\",\n    strong: \"strong\",\n    ul: \"ul\",\n    ..._provideComponents(),\n    ...props.components\n  };\n  return _jsxs(_Fragment, {\n    children: [_jsxs(_components.p, {\n      children: [\"Docker Swarm est un \", _jsx(_components.strong, {\n        children: \"orchestrateur\"\n      }), \" qui exécute, coordonne et gère automatiquement le cycle de vie des conteneurs Docker.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Il permet de répartir les conteneurs Docker selon l'utilisation des ressources (CPU, RAM, ect...) de chaque serveur.\"\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Ajouter un node à un cluster Docker Swarm\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Un node peut être configuré en tant que \", _jsx(_components.strong, {\n        children: \"manager\"\n      }), \" ou \", _jsx(_components.strong, {\n        children: \"worker\"\n      }), \" :\"]\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"\\n\", \"Les \", _jsx(_components.strong, {\n          children: \"managers\"\n        }), \" s'occupent de gérer l'état du cluster et de la répartition des tâches entre les workers.\", \"\\n\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"\\n\", \"Les \", _jsx(_components.strong, {\n          children: \"workers\"\n        }), \" acceptent les tâches des managers et les exécutent.\", \"\\n\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Pour ajouter un node manager ou worker :\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-bash\",\n        children: \"docker swarm join-token worker # Ajout d'un node worker\\ndocker swarm join-token manager # Ajout d'un node manager\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"La commande précédente affichera une commande \", _jsx(_components.code, {\n        children: \"docker swarm join\"\n      }), \" à exécuter sur le serveur que vous souhaitez ajouter à votre cluster Docker Swarm :\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-bash\",\n        children: \"docker swarm join --token <token> <ip>:2377\\n\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{"datePublished":"2021-05-17T17:32","dateUpdated":"2021-05-17T17:32","permalink":"docker-swarm","publish":true},"scope":{}},"isIndex":false,"file":"Docker Swarm.md","fileName":"Docker Swarm","comments":true,"title":"Docker Swarm","permalink":"docker-swarm","datePublished":"2021-05-17T17:32","dateUpdated":"2021-05-17T17:32","publish":true},"__N_SSG":true}