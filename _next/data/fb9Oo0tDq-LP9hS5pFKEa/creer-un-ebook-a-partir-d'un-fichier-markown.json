{"pageProps":{"source":{"compiledSource":"\"use strict\";\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    a: \"a\",\n    code: \"code\",\n    h2: \"h2\",\n    p: \"p\",\n    pre: \"pre\",\n    ..._provideComponents(),\n    ...props.components\n  };\n  return _jsxs(_Fragment, {\n    children: [_jsxs(_components.p, {\n      children: [\"Pour créer un ebook à partir d'un fichier markdown, il est possible d'utiliser Pandoc sur \", _jsx(_components.a, {\n        href: \"/linux\",\n        title: \"Linux\",\n        children: \"Linux\"\n      }), \".\"]\n    }), \"\\n\\n\", _jsx(_components.h2, {\n      children: \"Installation de Pandoc sur Linux\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Sur Ubuntu et Debian :\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-bash\",\n        children: \"apt update && apt install -y pandoc texlive texlive-latex-extra\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Sur Arch Linux :\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-bash\",\n        children: \"pacman -S --noconfirm pandoc texlive-bin texlive-core\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Création d'un ebook au format epub\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-bash\",\n        children: \"pandoc input.md -o output.epub\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Création d'un ebook au format pdf\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-bash\",\n        children: \"pandoc input.md -o output.pdf\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Création d'un ebook au format mobi\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-bash\",\n        children: \"pandoc input.md -o output.mobi\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Création d'un ebook avec Docker\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-bash\",\n        children: \"docker run -it -v $PWD:/mnt pandoc/core input.md -o /mnt/output.mobi\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Ajouter une cover\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Pour ajouter une cover :\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-bash\",\n        children: \"pandoc input.md --epub-cover-image cover.png -o output.epub\\n\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{"datePublished":"2021-06-27T19:19","dateUpdated":"2021-06-27T19:19","permalink":"creer-un-ebook-a-partir-d'un-fichier-markown","publish":true,"rss":true},"scope":{}},"isIndex":false,"file":"Créer un ebook à partir d'un fichier markown.md","fileName":"Créer un ebook à partir d'un fichier markown","comments":true,"title":"Créer un ebook à partir d'un fichier markown","permalink":"creer-un-ebook-a-partir-d'un-fichier-markown","datePublished":"2021-06-27T19:19","dateUpdated":"2021-06-27T19:19","publish":true,"rss":true},"__N_SSG":true}