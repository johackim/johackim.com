{"pageProps":{"source":{"compiledSource":"\"use strict\";\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    a: \"a\",\n    code: \"code\",\n    h2: \"h2\",\n    hr: \"hr\",\n    li: \"li\",\n    p: \"p\",\n    pre: \"pre\",\n    strong: \"strong\",\n    table: \"table\",\n    tbody: \"tbody\",\n    td: \"td\",\n    th: \"th\",\n    thead: \"thead\",\n    tr: \"tr\",\n    ul: \"ul\",\n    ..._provideComponents(),\n    ...props.components\n  };\n  return _jsxs(_Fragment, {\n    children: [_jsxs(_components.p, {\n      children: [\"N'ayant pas envie d'utiliser une solution propriétaire pour gérer les commentaires de mon blog et d'envoyer mes données personnelles et les vôtres (adresse IP, nom et e-mail) sur des serveurs aux USA. Je me suis configuré une petite installation de \", _jsx(_components.a, {\n        href: \"https://posativ.org/isso/\",\n        children: \"Isso\"\n      }), \".\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"J'utilise \", _jsx(_components.a, {\n        href: \"http://dokku.viewdocs.io/dokku/\",\n        children: _jsx(_components.strong, {\n          children: \"dokku\"\n        })\n      }), \" pour simplifier la création et les potentiels mises à jour de mes applications docker. C'est pour moi le moyen le plus simple de gérer une infrastructure web sans la complexité des VHOSTS, déploiements, certificats SSL, volumes et links docker, port binding etc...\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"PS: Si vous ne souhaitez pas utilisé dokku, vous pouvez simplement utiliser cette commande docker :\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-bash\",\n        children: \"docker run -d --name isso -p 80:80 sheogorath/isso-docker\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Installation\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Première chose à faire on pull une image docker trouvé sur \", _jsx(_components.a, {\n        href: \"https://hub.docker.com\",\n        children: \"https://hub.docker.com\"\n      }), \" et créer une application \", _jsx(_components.strong, {\n        children: \"dokku\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-bash\",\n        children: \"docker pull sheogorath/isso-docker\\ndokku apps:create isso\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"On configure le nom de domaine de l'application ainsi que l'URL du blog qui va héberger le système de commentaire :\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-bash\",\n        children: \"dokku domains:set isso isso.mondomaine.fr \\ndokku config:set isso ISSO_HOST=https://blog.mondomaine.fr\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"D'autres paramètres existent, comme \", _jsx(_components.code, {\n        children: \"ISSO_REQUIRE_EMAIL\"\n      }), \" qui permet de forcer le commentateur d'entrer une valeur dans le champ email :\"]\n    }), \"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\", _jsxs(_components.table, {\n      children: [_jsx(_components.thead, {\n        children: _jsxs(_components.tr, {\n          children: [_jsx(_components.th, {\n            children: \"Name\"\n          }), _jsx(_components.th, {\n            children: \"Default value\"\n          }), _jsx(_components.th, {\n            children: \"Description\"\n          })]\n        })\n      }), _jsxs(_components.tbody, {\n        children: [_jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"ISSO_HOST\"\n            })\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"http://example.com\"\n            })\n          }), _jsxs(_components.td, {\n            children: [\"It corresponds with [General] -> host \", _jsx(_components.a, {\n              href: \"https://posativ.org/isso/docs/configuration/server/#general\",\n              children: \"Details\"\n            })]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"ISSO_NAME\"\n            })\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"comments.example.com\"\n            })\n          }), _jsxs(_components.td, {\n            children: [\"It corresponds with [General] -> name \", _jsx(_components.a, {\n              href: \"https://posativ.org/isso/docs/configuration/server/#general\",\n              children: \"Details\"\n            })]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"ISSO_MAX_AGE\"\n            })\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"30m\"\n            })\n          }), _jsxs(_components.td, {\n            children: [\"It corresponds with [General] -> max-age \", _jsx(_components.a, {\n              href: \"https://posativ.org/isso/docs/configuration/server/#general\",\n              children: \"Details\"\n            })]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"ISSO_REPLY_TO_SELF\"\n            })\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"false\"\n            })\n          }), _jsxs(_components.td, {\n            children: [\"It corresponds with [Guard] -> reply-to-self \", _jsx(_components.a, {\n              href: \"https://posativ.org/isso/docs/configuration/server/#guard\",\n              children: \"Details\"\n            })]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"ISSO_REQUIRE_EMAIL\"\n            })\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"false\"\n            })\n          }), _jsxs(_components.td, {\n            children: [\"It corresponds with [Guard] -> require-email \", _jsx(_components.a, {\n              href: \"https://posativ.org/isso/docs/configuration/server/#guard\",\n              children: \"Details\"\n            })]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"ISSO_REQUIRE_AUTHOR\"\n            })\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"false\"\n            })\n          }), _jsxs(_components.td, {\n            children: [\"It corresponds with [Guard] -> require-author \", _jsx(_components.a, {\n              href: \"https://posativ.org/isso/docs/configuration/server/#guard\",\n              children: \"Details\"\n            })]\n          })]\n        })]\n      })]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"En temps normal, \", _jsx(_components.strong, {\n        children: \"dokku\"\n      }), \" relie directement le port 80 du reverse proxy au port 80 de notre container isso grâce à la directive EXPOSE du Dockerfile, ça ne marche pas sur mon environnement, en attendant la résolution de mon \", _jsx(_components.a, {\n        href: \"https://github.com/dokku/dokku/issues/2970\",\n        children: \"issue\"\n      }), \" voici les commandes à exécuter :\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-bash\",\n        children: \"dokku proxy:ports-add isso http:80:80\\ndokku proxy:ports-remove isso http:80:5000\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Après le paramétrage on déploie l'application isso :\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-bash\",\n        children: \"docker tag sheogorath/isso-docker dokku/isso\\ndocker deploy isso\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Le serveur est maintenant accessible sur \", _jsx(_components.code, {\n        children: \"http://isso.mondomaine.fr\"\n      }), \", une erreur 400 bad request apparait c'est normal, isso acceptent seulement les requêtes envoyées depuis le(s) domaine(s) autorisé(s) via la directive \", _jsx(_components.code, {\n        children: \"ISSO_HOST\"\n      }), \".\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Maintenant que le service isso est en ligne, la configuration de la partie client se fait simplement en ajoutant la librairie JavaScript et une balise \", _jsx(_components.code, {\n        children: \"<section>\"\n      }), \" sur notre blog :\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-html\",\n        children: \"<script data-isso=\\\"//isso.mondomaine.fr/\\\" src=\\\"//isso.mondomaine.fr/js/embed.min.js\\\"></script>\\n<section id=\\\"isso-thread\\\"></section>\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"D'autres paramètres que \", _jsx(_components.code, {\n        children: \"data-isso\"\n      }), \" existent aussi, pour pouvoir afficher les avatars, votes, changer la langue etc... :\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-html\",\n        children: \"<script data-isso=\\\"/prefix/\\\"\\n        data-isso-css=\\\"true\\\"\\n        data-isso-lang=\\\"ru\\\"\\n        data-isso-reply-to-self=\\\"false\\\"\\n        data-isso-require-author=\\\"false\\\"\\n        data-isso-require-email=\\\"false\\\"\\n        data-isso-max-comments-top=\\\"10\\\"\\n        data-isso-max-comments-nested=\\\"5\\\"\\n        data-isso-reveal-on-click=\\\"5\\\"\\n        data-isso-avatar=\\\"true\\\"\\n        data-isso-avatar-bg=\\\"#f0f0f0\\\"\\n        data-isso-avatar-fg=\\\"#9abf88 #5698c4 #e279a3 #9163b6 ...\\\"\\n        data-isso-vote=\\\"true\\\"\\n        data-vote-levels=\\\"\\\"\\n        src=\\\"/prefix/js/embed.js\\\"></script>\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Dans le cas de mon blog sous \", _jsx(_components.strong, {\n        children: \"ghost\"\n      }), \", j'ai simplement édité mon thème Casper en ajoutant les lignes de code ci-dessus dans le fichier \", _jsx(_components.code, {\n        children: \"post.hbs\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Bonus\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Pour éviter de perdre les commentaires en cas de mise a jour de \", _jsx(_components.strong, {\n        children: \"isso\"\n      }), \" on peut \", _jsx(_components.strong, {\n        children: \"persister les données\"\n      }), \" de cette façon :\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-bash\",\n        children: \"dokku storage:mount isso /opt/isso:/data\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Et si l'on souhaite ajouter un certificat let's encrypt une simple commande dokku existe :\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-bash\",\n        children: \"dokku letsencrypt isso\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Voilà ! Si vous avez des questions, suggestions n'hésitez pas à les soumettre dans les commentaires ! Bon week-end ;)\"\n    }), \"\\n\", _jsx(_components.hr, {}), \"\\n\", _jsx(_components.p, {\n      children: \"Références :\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"\\n\", _jsx(_components.a, {\n          href: \"/hebergeur-web\",\n          title: \"Hébergeur web\",\n          className: \"not-found\",\n          children: \"Hébergeur web\"\n        }), \"\\n\\n\"]\n      }), \"\\n\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{"title":"Installation d'une alternative open-source à Disqus","permalink":"installation-alternative-open-source-disqus","datePublished":"2017-11-03T18:00","dateUpdated":"2017-11-03T18:00","description":"N'ayant pas envie d'utiliser une solution propriétaire pour gérer les commentaires de mon blog je me suis configuré une petite installation de Isso via dokku.","publish":true,"rss":true,"aliases":["Disqus alternative"]},"scope":{}},"isIndex":false,"file":"Isso.md","fileName":"Isso","comments":true,"title":"Installation d'une alternative open-source à Disqus","permalink":"installation-alternative-open-source-disqus","datePublished":"2017-11-03T18:00","dateUpdated":"2017-11-03T18:00","description":"N'ayant pas envie d'utiliser une solution propriétaire pour gérer les commentaires de mon blog je me suis configuré une petite installation de Isso via dokku.","publish":true,"rss":true,"aliases":["Disqus alternative"]},"__N_SSG":true}